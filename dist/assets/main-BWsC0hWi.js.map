{"version":3,"file":"main-BWsC0hWi.js","sources":["../../src/features/html/html.template.js","../../src/features/html/html.service.js","../../src/features/html/html.ui.js","../../src/features/html/main.js"],"sourcesContent":["export const htmlTemplate = `\n    <div class=\"tool-container html-preview-formatter-container\">\n      <div class=\"editor-preview-container\">\n        <div class=\"html-preview-formatter-content\">\n          <div class=\"html-preview-formatter-controls button-group\">\n            <button id=\"formatButton\">Format</button>\n            <button id=\"minifyButton\">Minify</button>\n            <button id=\"copyButton\">Copy</button>\n            <button id=\"pasteButton\">Paste</button>\n            <button id=\"clearButton\">Clear</button>\n            <button id=\"toggleWrapButton\">Word Wrap</button>\n            <button id=\"toggleHighlightButton\">Syntax Highlight</button>\n          </div>\n          <div id=\"html-editor\" class=\"html-content-area\"></div>\n          <div class=\"dynamic-fields-container\">\n            <h3 id=\"sectionText\">Dynamic Fields</h3>\n            <div id=\"dynamicFields\"></div>\n          </div>\n        </div>\n        <div class=\"preview-container button-group\">\n          <div class=\"iphone-simulator\">\n            <iframe id=\"htmlPreview\"></iframe>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;","export class HtmlService {\n  formatHTML(content) {\n    if (typeof html_beautify === \"undefined\") {\n      console.error(\"html_beautify is not available. Falling back to basic formatting.\");\n      return this.basicFormatHTML(content);\n    }\n    return html_beautify(content, {\n      indent_size: 2,\n      wrap_line_length: 0,\n      preserve_newlines: true,\n      max_preserve_newlines: 1,\n      end_with_newline: false,\n      extra_liners: [],\n    });\n  }\n\n  async parseVelocity(content, context = {}) {\n    try {\n      return window.Velocity.render(content, context);\n    } catch (error) {\n      console.error(\"Error in Velocity parsing:\", error);\n      return content;\n    }\n  }\n\n  basicFormatHTML(content) {\n    return content\n      .replace(/>s+</g, \">\\n<\")\n      .replace(/(<[^/].*?>)/g, \"\\n$1\")\n      .split(\"\\n\")\n      .filter((line) => line.trim() !== \"\")\n      .map((line) => \"  \".repeat(line.match(/^\\s*/)[0].length / 2) + line.trim())\n      .join(\"\\n\");\n  }\n\n  minifyHTML(content) {\n    return content.replace(/\\s+/g, \" \").replace(/> </g, \"><\");\n  }\n\n  replaceVariables(content, baseUrl, dynamicFields) {\n    let replaced = content.replace(/\\${baseUrl}/g, baseUrl);\n    dynamicFields.forEach((input) => {\n      const regex = new RegExp(`\\\\$\\\\{${input.name}\\\\}`, \"g\");\n      replaced = replaced.replace(regex, input.value);\n    });\n    return replaced;\n  }\n\n  detectDynamicFields(content) {\n    const fields = new Set();\n\n    // Detect ${variable} syntax\n    const dollarRegex = /\\$\\{([^}]+)\\}/g;\n    let match;\n    while ((match = dollarRegex.exec(content)) !== null) {\n      if (match[1] !== \"baseUrl\") {\n        fields.add(match[1]);\n      }\n    }\n\n    // Detect Velocity $variable syntax\n    const velocityRegex = /\\$(!?\\{)?([a-zA-Z][a-zA-Z0-9_]*)}?/g;\n    while ((match = velocityRegex.exec(content)) !== null) {\n      const varName = match[2];\n      if (varName !== \"baseUrl\") {\n        fields.add(varName);\n      }\n    }\n\n    return Array.from(fields);\n  }\n\n  reloadImages(iframeDocument) {\n    const images = iframeDocument.getElementsByTagName(\"img\");\n    for (let img of images) {\n      const currentSrc = img.src;\n      img.src = \"about:blank\";\n      img.src = currentSrc;\n    }\n  }\n}\n","import { copyToClipboard } from \"../../utils/buttons.js\";\nimport { htmlTemplate } from \"./html.template.js\";\nimport { HtmlService } from \"./html.service.js\";\nexport class HtmlUI {\n  constructor(container) {\n    this.container = container;\n    this.htmlService = new HtmlService();\n    this.editor = null;\n    this.init();\n  }\n\n  async init() {\n    await this.initializeUi();\n    await this.initializeEditor();\n    this.bindElements();\n    this.setupEventListeners();\n  }\n\n  async initializeUi() {\n    return new Promise((resolve) => {\n      this.container.innerHTML = htmlTemplate;\n      requestAnimationFrame(() => {\n        resolve();\n      });\n    });\n  }\n\n  bindElements() {\n    this.elements = {\n      copyButton: document.getElementById(\"copyButton\"),\n      pasteButton: document.getElementById(\"pasteButton\"),\n      toggleWrapButton: document.getElementById(\"toggleWrapButton\"),\n      toggleHighlightButton: document.getElementById(\"toggleHighlightButton\"),\n      baseUrlSelect: document.getElementById(\"baseUrl\"),\n      dynamicFieldsContainer: document.getElementById(\"dynamicFields\"),\n      htmlPreview: document.getElementById(\"htmlPreview\"),\n    };\n\n    // Set initial button states\n    this.elements.toggleWrapButton.textContent = \"Disable Word Wrap\";\n    this.elements.toggleHighlightButton.textContent = \"Disable Syntax Highlight\";\n  }\n\n  initializeEditor() {\n    this.editor = CodeMirror(document.querySelector(\".html-content-area\"), {\n      mode: \"htmlmixed\",\n      lineWrapping: true,\n      lineNumbers: true,\n      theme: \"default\",\n      autoCloseTags: true,\n      autoCloseBrackets: true,\n      matchBrackets: true,\n      indentUnit: 2,\n      tabSize: 2,\n      indentWithTabs: false,\n      extraKeys: { \"Ctrl-Space\": \"autocomplete\" },\n    });\n  }\n\n  setupEventListeners() {\n    this.editor.on(\"change\", () => {\n      this.detectDynamicFields();\n      this.updatePreview();\n    });\n\n    document.getElementById(\"formatButton\").addEventListener(\"click\", () => this.formatHTML());\n    document.getElementById(\"minifyButton\").addEventListener(\"click\", () => this.minifyHTML());\n    document\n      .getElementById(\"copyButton\")\n      .addEventListener(\"click\", () => copyToClipboard(this.editor.getValue(), this.elements.copyButton));\n    document.getElementById(\"pasteButton\").addEventListener(\"click\", () => this.handlePaste());\n    document.getElementById(\"clearButton\").addEventListener(\"click\", () => this.editor.setValue(\"\"));\n    document.getElementById(\"loadImagesButton\")?.addEventListener(\"click\", () => this.loadImages());\n    this.elements.toggleWrapButton.addEventListener(\"click\", () => this.toggleWordWrap());\n    this.elements.toggleHighlightButton.addEventListener(\"click\", () => this.toggleSyntaxHighlight());\n    this.elements.baseUrlSelect?.addEventListener(\"change\", () => this.updatePreview());\n    this.elements.dynamicFieldsContainer.addEventListener(\"input\", () => this.updatePreview());\n  }\n\n  toggleWordWrap() {\n    const isWrapped = this.editor.getOption(\"lineWrapping\");\n    this.editor.setOption(\"lineWrapping\", !isWrapped);\n    this.elements.toggleWrapButton.textContent = isWrapped ? \"Enable Word Wrap\" : \"Disable Word Wrap\";\n  }\n\n  toggleSyntaxHighlight() {\n    const isHighlightEnabled = this.editor.getOption(\"mode\") === \"htmlmixed\";\n    this.editor.setOption(\"mode\", isHighlightEnabled ? null : \"htmlmixed\");\n    this.elements.toggleHighlightButton.textContent = isHighlightEnabled ? \"Enable Syntax Highlight\" : \"Disable Syntax Highlight\";\n  }\n\n  formatHTML() {\n    const formatted = this.htmlService.formatHTML(this.editor.getValue());\n    this.editor.setValue(formatted);\n  }\n\n  minifyHTML() {\n    const minified = this.htmlService.minifyHTML(this.editor.getValue());\n    this.editor.setValue(minified);\n  }\n\n  async updatePreview() {\n    const content = this.editor.getValue();\n    const dynamicFields = Array.from(document.querySelectorAll(\"#dynamicFields input\"));\n    const velocityContext = {};\n    dynamicFields.forEach((input) => {\n      velocityContext[input.name] = input.value;\n    });\n\n    // First parse Velocity template with the context\n    const velocityParsed = await this.htmlService.parseVelocity(content, velocityContext);\n\n    // Then handle baseUrl replacement\n    const replacedContent = this.htmlService.replaceVariables(velocityParsed, this.elements.baseUrlSelect?.value || \"\", dynamicFields);\n\n    const previewDocument = this.elements.htmlPreview.contentDocument;\n\n    previewDocument.open();\n    previewDocument.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <base href=\"${this.elements.baseUrlSelect?.value || \"\"}/\" target=\"_blank\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n          <style>\n            body { \n              margin: 0;\n              padding: 0;\n              width: 100%;\n              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica', 'Arial', sans-serif;\n              overflow-x: hidden;\n            }\n            img {\n              max-width: 100%;\n              height: auto;\n            }\n            table {\n              width: 100% !important;\n              height: auto !important;\n            }\n            td {\n              word-break: break-word;\n            }\n          </style>\n        </head>\n        <body>\n          ${replacedContent}\n        </body>\n      </html>\n    `);\n    previewDocument.close();\n  }\n\n  detectDynamicFields() {\n    const content = this.editor.getValue();\n    const fields = this.htmlService.detectDynamicFields(content);\n\n    this.elements.dynamicFieldsContainer.innerHTML = \"\";\n    fields.forEach((field) => {\n      const input = document.createElement(\"input\");\n      input.type = \"text\";\n      input.name = field;\n      input.placeholder = field;\n      input.value = field;\n      this.elements.dynamicFieldsContainer.appendChild(input);\n    });\n  }\n\n  loadImages() {\n    const iframeDoc = this.elements.htmlPreview.contentDocument || this.elements.htmlPreview.contentWindow.document;\n    this.htmlService.reloadImages(iframeDoc);\n  }\n\n  async handlePaste() {\n    try {\n      const text = await navigator.clipboard.readText();\n      this.editor.setValue(text);\n    } catch (err) {\n      console.error(\"Failed to read clipboard contents: \", err);\n    }\n  }\n}\n","import { HtmlUI } from \"./html.ui.js\";\n\nexport function initHtmlTemplate(container) {\n  return new HtmlUI(container);\n}"],"names":["htmlTemplate","HtmlService","content","context","error","line","baseUrl","dynamicFields","replaced","input","regex","fields","dollarRegex","match","velocityRegex","varName","iframeDocument","images","img","currentSrc","HtmlUI","container","resolve","copyToClipboard","_a","_b","isWrapped","isHighlightEnabled","formatted","minified","velocityContext","velocityParsed","replacedContent","previewDocument","field","iframeDoc","text","err","initHtmlTemplate"],"mappings":"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"}