{"version":3,"file":"main-BkCKRA_Q.js","sources":["../../src/features/queryin/queryin.template.js","../../src/features/queryin/queryin.service.js","../../src/features/queryin/queryin.ui.js","../../src/features/queryin/main.js"],"sourcesContent":["export const queryInTemplate = `\n    <div class=\"tool-container\">\n      <h3 id=\"sectionText\">Values</h3>\n      <textarea id=\"inputValues\" placeholder=\"Enter values of the field, one per line\">notification_template_id_1\nnotification_template_id_2\nnotification_template_id_3\nnotification_template_id_4</textarea>\n      <div class=\"button-group\">\n        <div class=\"input-group\">\n          <label for=\"schemaName\">Schema Name</label>\n          <input type=\"text\" id=\"schemaName\" placeholder=\"Schema Name\" value=\"notification\">\n        </div>\n        <div class=\"input-group\">\n          <label for=\"tableName\">Table Name</label>\n          <input type=\"text\" id=\"tableName\" placeholder=\"Table Name\" value=\"notification_template\">\n        </div>\n        <div class=\"input-group\">\n          <label for=\"fieldName\">Field Name</label>\n          <input type=\"text\" id=\"fieldName\" placeholder=\"Field Name\" value=\"notification_template_id\">\n        </div>\n      </div>\n      <div class=\"button-group\">\n        <button id=\"generateButton\">Generate</button>\n        <button id=\"clearButton\">Clear</button>\n        <button id=\"pasteButton\">Paste</button>\n      </div>\n    </div>\n    <div class=\"tool-container\">\n      <h3 id=\"sectionText\">Generated Query</h3>\n      <div id=\"outputQueryEditor\" class=\"queryin-content-area\"></div>\n      <div class=\"button-group\">\n        <button id=\"copyButton\">Copy</button>\n        <button id=\"clearResultButton\">Clear</button>\n      </div>\n    </div>\n`;","export class QueryInService {\n    generateQuery(inputValues, schemaName, tableName, fieldName) {\n        const values = inputValues\n            .split(\"\\n\")\n            .filter((value) => value.trim() !== \"\")\n            .map((value) => `    '${value.trim()}'`)\n            .join(\",\\n\");\n\n        const query = `SELECT *\nFROM ${schemaName}.${tableName}\nWHERE ${fieldName} IN (\n${values});`;\n\n        return query;\n    }\n}","import { copyToClipboard } from \"../../utils/buttons.js\";\nimport { queryInTemplate } from \"./queryin.template.js\";\nimport { QueryInService } from \"./queryin.service.js\";\nimport { DependencyLoader } from \"../../utils/dependencyLoader.js\";\n\nexport class QueryInUI {\n  constructor(container) {\n    this.container = container;\n    this.queryInService = new QueryInService();\n    this.outputQueryEditor = null;\n    this.init();\n  }\n\n  async init() {\n    await this.initializeUi();\n    this.bindElements();\n    this.setupEventListeners();\n    await this.loadDependencies();\n  }\n\n  async initializeUi() {\n    return new Promise((resolve) => {\n      this.container.innerHTML = queryInTemplate;\n      requestAnimationFrame(() => {\n        resolve();\n      });\n    });\n  }\n\n  async loadDependencies() {\n    await DependencyLoader.load(\"codemirror\");\n    this.initializeEditor();\n  }\n\n  bindElements() {\n    this.elements = {\n      inputValues: document.getElementById(\"inputValues\"),\n      generateButton: document.getElementById(\"generateButton\"),\n      clearButton: document.getElementById(\"clearButton\"),\n      pasteButton: document.getElementById(\"pasteButton\"),\n      copyButton: document.getElementById(\"copyButton\"),\n      clearResultButton: document.getElementById(\"clearResultButton\"),\n      schemaName: document.getElementById(\"schemaName\"),\n      tableName: document.getElementById(\"tableName\"),\n      fieldName: document.getElementById(\"fieldName\"),\n    };\n  }\n\n  setupEventListeners() {\n    this.elements.generateButton.addEventListener(\"click\", () => this.updateCodeMirror());\n    this.elements.clearButton.addEventListener(\"click\", () => this.handleClear());\n    this.elements.clearResultButton.addEventListener(\"click\", () => this.handleClearResult());\n    this.elements.pasteButton.addEventListener(\"click\", () => this.handlePaste());\n    this.elements.copyButton.addEventListener(\"click\", () => this.handleCopy());\n\n    [this.elements.inputValues, this.elements.schemaName, this.elements.tableName, this.elements.fieldName].forEach((element) => {\n      element.addEventListener(\"input\", () => this.updateCodeMirror());\n    });\n\n    this.adjustInputWidth();\n  }\n\n  initializeEditor() {\n    this.outputQueryEditor = CodeMirror(document.getElementById(\"outputQueryEditor\"), {\n      mode: \"sql\",\n      lineNumbers: true,\n      readOnly: true,\n    });\n    this.updateCodeMirror();\n  }\n\n  updateCodeMirror() {\n    if (!this.outputQueryEditor) return;\n    const query = this.queryInService.generateQuery(\n      this.elements.inputValues.value,\n      this.elements.schemaName.value,\n      this.elements.tableName.value,\n      this.elements.fieldName.value\n    );\n    this.outputQueryEditor.setValue(query);\n    this.outputQueryEditor.refresh();\n  }\n\n  handleClear() {\n    this.elements.inputValues.value = \"\";\n    this.elements.fieldName.value = \"\";\n    this.elements.tableName.value = \"\";\n    this.elements.schemaName.value = \"\";\n    this.updateCodeMirror();\n  }\n\n  handleClearResult() {\n    this.outputQueryEditor.setValue(\"\");\n  }\n\n  async handlePaste() {\n    try {\n      const text = await navigator.clipboard.readText();\n      this.elements.inputValues.value = text;\n      this.updateCodeMirror();\n    } catch (err) {\n      console.error(\"Failed to read clipboard contents: \", err);\n    }\n  }\n\n  handleCopy() {\n    copyToClipboard(this.outputQueryEditor.getValue(), this.elements.copyButton);\n  }\n\n  adjustInputWidth() {\n    const inputs = document.querySelectorAll('.input-group input[type=\"text\"]');\n    inputs.forEach((input) => {\n      input.addEventListener(\"input\", function () {\n        this.style.width = \"auto\";\n        this.style.width = this.scrollWidth + 5 + \"px\";\n      });\n      input.dispatchEvent(new Event(\"input\"));\n    });\n  }\n}\n","import { QueryInUI } from \"./queryin.ui.js\";\n\nexport function initQueryInGenerator(container) {\n    return new QueryInUI(container);\n}"],"names":["queryInTemplate","QueryInService","inputValues","schemaName","tableName","fieldName","values","value","QueryInUI","container","resolve","DependencyLoader","element","query","text","err","copyToClipboard","input","initQueryInGenerator"],"mappings":"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"}