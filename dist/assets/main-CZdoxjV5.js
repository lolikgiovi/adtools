import{c as ke}from"./utils-P83EfEoD.js";import"./vendor-ItrcfzAD.js";const Be=`
<div class="tool-container querify-tool-container">
  <div class="querify-left-panel">
    <div id="dragDropArea" class="querify-drag-drop-area wide">
      <p>Drag and drop files here or click to select</p>
      <input type="file" id="querifyInputFiles" accept=".xlsx, .xls, .txt, .jpg, .jpeg, .png " multiple style="display: none;" />
    </div>
    <div class="querify-file-list">
      <div id="excelFiles"></div>
      <div id="textFiles"></div>
      <div id="imageFiles"></div>
    </div>
  </div>
  <div class="querify-right-panel">
    <div class="button-group querify-button-group">
      <select id="queryType">
        <option value="merge-classic">MERGE INTO (Querify Classic)</option>
        <option value="merge">MERGE INTO (Compact)</option>
        <option value="insert">INSERT INTO</option>
      </select>
      <button id="generateAll" title="Generate queries for all files">Generate All</button>
      <button id="copySQL">Copy</button>
      <button id="downloadSQL">Download</button>
      <button id="downloadAll">Download All</button>
      <button id="toggleWrap">Word Wrap</button>
      <button id="splitSQL" title="Split query into 90 kilobytes chunks for Jenkins execution" disabled>Split</button>
    </div>
    <div id="errorMessages"></div>
    <div id="queryEditor" class="querify-content-area"></div>
    <div id="imagePreviewContainer" class="querify-content-area" style="display: none;">
      <img id="imagePreview" style="max-width: 100%; max-height: 300px;">
      <div id="imageInfo"></div>
    </div>
    <div id="textPreviewContainer" class="querify-content-area" style="display: none;">
      <pre id="textPreview"></pre>
    </div>
    <div id="progressBar" class="querify-progress-bar" style="display: none;">
      <div class="progress"></div>
    </div>
  </div>
  <button id="aboutQuerify" class="about-button">?</button>
</div>
`;function He(X){X.innerHTML=Be;let S=[],w=[],L=[],M={},p=null,b,D=!1,h={},T={},J=["https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js","https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js","https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.js","https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/mode/sql/sql.min.js","https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js","https://cdn.jsdelivr.net/npm/marked/marked.min.js"];const R=document.getElementById("querifyInputFiles"),N=document.getElementById("queryType"),Z=document.getElementById("generateAll"),Y=document.getElementById("errorMessages"),ee=document.getElementById("downloadSQL"),te=document.getElementById("downloadAll"),H=document.getElementById("copySQL"),j=document.getElementById("toggleWrap"),ne=document.getElementById("queryEditor"),E=document.getElementById("dragDropArea"),O=document.getElementById("splitSQL"),oe=document.getElementById("aboutQuerify");R.addEventListener("change",re),Z.addEventListener("click",B),ee.addEventListener("click",Le),te.addEventListener("click",we),H.addEventListener("click",()=>ke(b.getValue(),H)),j.addEventListener("click",Me),N.addEventListener("change",Te),E.addEventListener("dragover",ve),E.addEventListener("dragleave",De),E.addEventListener("drop",Ne),E.addEventListener("click",()=>R.click()),O.addEventListener("click",Ye),oe.addEventListener("click",Fe),U(J),v();function U(e,t=0){if(t<e.length){const n=document.createElement("script");n.src=e[t],n.onload=()=>U(e,t+1),document.head.appendChild(n)}else se()}function se(){b=CodeMirror(ne,{mode:"text/x-sql",theme:"material",lineNumbers:!0,readOnly:!0}),console.log("Editor initialized successfully")}function P(e,t){t==="excel"?(p=S[e],h[p.name]?b.setValue(h[p.name].query):b.setValue(""),T[p.name]===!1?C(T[p.name+"_error"]):v(),F("queryEditor")):t==="text"?(p=w[e],ce(p)):t==="image"&&(p=L[e],ue(p)),ie(),K()}function ie(){document.querySelectorAll(".querify-file-button").forEach(t=>{p&&t.dataset.fileName===p.name?t.classList.add("selected-file"):t.classList.remove("selected-file")})}function F(e){document.querySelectorAll(".querify-content-area").forEach(n=>n.style.display="none"),document.getElementById(e).style.display="block",e!=="queryEditor"&&v()}function re(e){v();const t=Array.from(e.target.files);_(t)}function _(e){S=[],w=[],L=[],M={},e.forEach(t=>{console.log("Processing file:",t.name);const n=t.name.split(".").pop().toLowerCase();if(n==="xlsx"||n==="xls")S.push(t);else if(n==="txt"){const o=new FileReader;o.onload=s=>{const r=s.target.result;r.trim().startsWith("data:image")?(console.log("Text file contains base64 image data:",t.name),L.push(t)):w.push(t),M[t.name]=r,A()},o.readAsText(t)}else["jpg","jpeg","png","gif"].includes(n)&&L.push(t)}),A(),le(),de(),B()}function A(){const e=document.getElementById("excelFiles"),t=document.getElementById("textFiles"),n=document.getElementById("imageFiles"),o=document.querySelector(".querify-file-list");e.innerHTML=S.length?"<h3>SQL Files:</h3>":"",t.innerHTML=w.length?"<h3>Text Files:</h3>":"",n.innerHTML=L.length?"<h3>Image Files:</h3>":"",S.forEach((r,i)=>{const a=k(r,i,"excel");e.appendChild(a)}),w.forEach((r,i)=>{const a=k(r,i,"text");t.appendChild(a)}),L.forEach((r,i)=>{const a=k(r,i,"image");n.appendChild(a)}),S.length>0||w.length>0||L.length>0?(o.style.display="flex",E.classList.remove("wide"),E.classList.add("small")):(o.style.display="none",E.classList.remove("small"),E.classList.add("wide"))}function k(e,t,n){const o=document.createElement("div");o.className="querify-file-button",o.dataset.fileName=e.name;const s=document.createElement("div");s.className="querify-file-info";const r=document.createElement("span");if(r.className="file-name",n==="excel"?r.textContent=e.name.split(".").slice(0,-1).join("."):r.textContent=e.name,s.appendChild(r),n==="excel"){const i=document.createElement("span");i.className="primary-key",i.textContent="pk: loading...",s.appendChild(i);const a=document.createElement("span");if(a.className="sql-size",a.textContent="size: calculating...",s.appendChild(a),T[e.name]===!0&&h[e.name])if(e.name.split(".")[0],h[e.name].tableSchema){const d=h[e.name].primaryKeys;i.textContent=`pk: ${d.join(", ")}`;const f=h[e.name].query,l=new Blob([f]).size;let g;l>=1024*1024?g=`${(l/1048576).toFixed(2)} MB`:g=`${(l/1024).toFixed(2)} KB`,a.textContent=`size: ${g}`}else i.textContent="pk: unknown",a.textContent="size: unknown";else i.textContent="pk: unknown",a.textContent="size: unknown";T[e.name]===!1?o.classList.add("invalid-file"):T[e.name]===!0&&o.classList.add("valid-file")}return o.appendChild(s),o.addEventListener("click",()=>P(t,n)),o}function ae(e,t){if(console.log("TABLE:",e,t),!e||!Array.isArray(e))return console.warn(`Invalid table schema for ${t}`),["unknown"];if(t.toLowerCase().endsWith("config")){const o=e.find(s=>s.field.toLowerCase()==="parameter_key");if(o)return[o.field]}else if(t.toLowerCase().endsWith("event")){const o=e.find(s=>s.field.toLowerCase()==="event_code");if(o)return[o.field]}const n=e.filter(o=>o.order&&o.order.toString().toLowerCase()==="pk").map(o=>o.field);return n.length>0?n:(console.warn(`No suitable primary key found for ${t}. Using the first field as primary key.`),console.log(e[0].field),[e[0]?e[0].field.toLowerCase():"unknown"])}function le(){w.forEach(e=>{const t=new FileReader;t.onload=n=>{console.log(`Found text file: ${e.name}:`),M[e.name]=n.target.result},t.readAsText(e)})}function ce(e){const t=new FileReader;t.onload=n=>{const o=document.getElementById("textPreview");o.textContent=n.target.result,F("textPreviewContainer")},t.readAsText(e)}function V(e){return new Promise((t,n)=>{const o=new FileReader;o.onload=()=>t(o.result),o.onerror=n,o.readAsDataURL(e)})}async function de(){for(const e of L)if(e.name.toLowerCase().endsWith(".txt"))if(M[e.name])console.log(`Using pre-loaded content for ${e.name}`);else try{await z(e)}catch(t){console.error(`Error reading text file ${e.name}:`,t)}else try{const t=await V(e);M[e.name]=t}catch(t){console.error(`Error converting ${e.name} to base64:`,t)}}function z(e){return new Promise((t,n)=>{const o=new FileReader;o.onload=s=>{M[e.name]=s.target.result,t()},o.onerror=n,o.readAsText(e)})}function ue(e){if(e.name.toLowerCase().endsWith(".txt"))M[e.name]?(W(M[e.name],e.name),F("imagePreviewContainer")):console.warn(`Content for ${e.name} not found`);else{const t=new FileReader;t.onload=n=>{W(n.target.result,e.name),F("imagePreviewContainer")},t.readAsDataURL(e)}}function W(e,t){const n=document.getElementById("imagePreviewContainer"),o=document.getElementById("imagePreview"),s=document.getElementById("imageInfo");if(/^data:image\/[a-z]+;base64,/.test(e)){o.src=e,n.style.display="block";const i=t.split(".").pop().toLowerCase(),a=e.split(",")[1],f=(atob(a).length/1024).toFixed(2),l=new Image;l.onload=function(){const g=`${this.width}x${this.height}`;s.innerHTML=`
          <p>Filename: ${t}</p>
          <p>Extension: ${i}</p>
          <p>Dimensions: ${g}</p>
          <p>Size: ${f} KB</p>
          <p>Base64 character count: ${a.length}</p>
        `},l.src=e}else n.style.display="none",s.innerHTML=`
        <p>Filename: ${t}</p>
        <p>Not a valid image file or base64 string</p>
      `}async function B(){for(let e=0;e<S.length;e++)await me(S[e]);S.length>0&&P(0,"excel")}async function me(e){if(console.log(`Starting handleGenerateQuery for file: ${e.name}`),!e){C("Please select an Excel file.");return}const t=N.value;try{const n=await new Promise((o,s)=>{const r=new FileReader;r.onload=async i=>{try{const a=new Uint8Array(i.target.result),u=XLSX.read(a,{type:"array"});if(u.SheetNames.length<2){o({isValid:!1,errorMessage:"Excel file must contain at least two sheets."});return}const d=u.Sheets[u.SheetNames[0]],f=u.Sheets[u.SheetNames[1]];let l=XLSX.utils.sheet_to_json(d,{header:1});const g=XLSX.utils.sheet_to_json(f,{header:["field","dataType","nullable","blank","order"]});if(g.length===0){o({isValid:!1,errorMessage:"Schema sheet is empty or improperly formatted."});return}console.log(`Validating data for ${e.name}`);const $=ge(l,g);if(!$.isValid){o({isValid:!1,errorMessage:$.errorMessage});return}console.log(`Processing image data for ${e.name}`),l=await fe(l,g);const c=e.name.split(".").slice(0,-1).join(".");console.log(`Generating SQL query for ${c}`);const m=ae(g,c),y=Ee(l,g,t,c,m);o({isValid:!0,query:y,tableSchema:g,primaryKeys:m})}catch(a){s(a)}},r.onerror=s,r.readAsArrayBuffer(e)});console.log(`Query generation result for ${e.name}: ${n.isValid?"Valid":"Invalid"}`),n.isValid?(h[e.name]={query:n.query,tableSchema:n.tableSchema,primaryKeys:n.primaryKeys,fullTableName:e.name.split(".").slice(0,-1).join(".")},T[e.name]=!0,e===p&&(b.setValue(n.query),v())):(T[e.name]=!1,T[e.name+"_error"]=n.errorMessage,e===p&&C(n.errorMessage)),A()}catch(n){console.error(`Error in handleGenerateQuery for ${e.name}:`,n),C(`Error processing ${e.name}: ${n.message}`)}}async function fe(e,t){console.log("Starting processImageData");const n=t.filter(o=>o.dataType.toUpperCase().startsWith("CLOB"));if(n.length===0)return console.log("No CLOB fields found, returning original data"),e;for(let o=1;o<e.length;o++)for(const s of n){const r=s.field.toLowerCase(),i=e[0].findIndex(f=>f.toLowerCase()===r);if(i===-1){console.log(`CLOB field ${r} not found in data, skipping`);continue}let a=e[o][i];if(typeof a!="string"||a.length>=100)continue;const u=a.split(".").slice(0,-1).join(".").toLowerCase();console.log("baseFileName:",u);const d=pe(u);if(d)try{d.name.toLowerCase().endsWith(".txt")?(console.log(`Reading text file: ${d.name}`),a=await z(d)):(console.log(`Converting image file to base64: ${d.name}`),a=await V(d)),a.startsWith("data:image")?e[o][i]=a:console.warn(`Invalid image data for ${d.name}, keeping original value`)}catch(f){console.warn(`Failed to process file ${d.name}: ${f.message}`)}else console.log(`No matching file found for ${u}, keeping original value`)}return console.log("Finished processImageData"),e}function pe(e){return[...w,...L].find(t=>t.name.split(".").slice(0,-1).join(".").toLowerCase()===e)}function Q(e){let t="";for(;e>=0;)t=String.fromCharCode(65+e%26)+t,e=Math.floor(e/26)-1;return t}function ge(e,t){if(e.length===0)return{isValid:!1,errorMessage:"Excel file is empty."};if(e[0].length!==t.length)return{isValid:!1,errorMessage:`Mismatch in field count. Sheet1 has ${e[0].length} field names, but Sheet2 has ${t.length} field names.`};const n=new Set(e[0]),o=new Set(t.map(r=>r.field));for(let r of n)if(!o.has(r))return{isValid:!1,errorMessage:`Field '${r}' in Sheet1 does not exist in Sheet2.`};for(let r of o)if(!n.has(r))return{isValid:!1,errorMessage:`Field '${r}' in Sheet2 does not exist in Sheet1.`};const s={};e[0].forEach((r,i)=>{s[r]=i});for(let r=1;r<e.length;r++)for(let i of t){const a=s[i.field],u=e[r][a];if(!(i.field.toLowerCase()==="created_time"||i.field.toLowerCase()==="created_by"||i.field.toLowerCase()==="updated_time"||i.field.toLowerCase()==="updated_by"||i.field.toLowerCase()==="config_id")){if(i.nullable.toLowerCase()==="no"&&(u==null||u==="NULL"||u==="null")){const d=Q(a);return{isValid:!1,errorMessage:`NON NULLABLE data on ROW ${r+1} COLUMN ${d} is NULL(${i.field}), PLEASE RECHECK`}}if(!ye(u,i)){const d=Q(a);return{isValid:!1,errorMessage:`Invalid data in Sheet1 at row ${r+1}, column ${d} (${i.field}). Expected ${i.dataType}, got ${u}`}}}}return{isValid:!0,errorMessage:""}}function ye(e,t){if(t.nullable.toLowerCase()==="yes"&&(e==null||e==="NULL"||e==="null"||e===""))return!0;switch(t.dataType.split("(")[0].toUpperCase()){case"VARCHAR2":case"VARCHAR":return!0;case"NUMBER":return!isNaN(parseFloat(e))&&isFinite(e);case"TIMESTAMP":return he(e);default:return!0}}function he(e){return typeof e=="string"&&e.toLowerCase()==="sysdate"?!0:["DD-MM-YYYY","DD-MM-YYYY HH:mm:ss","YYYY-MM-DD","YYYY-MM-DD HH:mm:ss","DD-MM-YYYY HH.mm.ss,SSSSSSSSS","DD/MM/YYYY","DD/M/YYYY","M/D/YYYY H:mm:ss.SSSSSS A"].some(n=>moment(e,n,!0).isValid())}function Ee(e,t,n,o,s){let r,i;o.includes(".")?[r,i]=o.split("."):(r="schema_name",i=o,console.log("No dot found - using fileName as tableName:",i));const a=`${r.toLowerCase()}.${i.toLowerCase()}`;console.log("Final fullTableName:",`${a}`),console.log("primaryKeys:",s);const u=e[0].map(c=>c.toLowerCase()),d={};e[0].forEach((c,m)=>{d[c.toLowerCase()]=m});const f={};t.forEach(c=>{f[c.field.toLowerCase()]=c});let l="";if(n==="insert"){l=`SET DEFINE OFF;

`;for(let c=1;c<e.length;c++){l+=`INSERT INTO ${a} (${u.join(", ")}) `,l+="VALUES (";const m=u.map(y=>{const x=e[c][d[y]];return I(x,f[y],a)});l+=m.join(", "),l+=`);
`}}else if(n==="merge"){l=`SET DEFINE OFF;

`,l+=`MERGE INTO ${a} t
USING (
`;for(let c=1;c<e.length;c++)l+="  SELECT ",l+=u.map(m=>{const y=e[c][d[m]],x=f[m];return`${I(y,x,a)} AS ${m}`}).join(", "),l+=" FROM DUAL",c<e.length-1&&(l+=` UNION ALL
`);l+=`
) s
ON (${s.map(c=>`t.${c} = s.${c}`).join(" AND ")})
`,l+=`WHEN MATCHED THEN UPDATE SET
`,l+=u.filter(c=>!s.some(m=>m.toLowerCase()===c.toLowerCase())&&c.toLowerCase()!=="created_time"&&c.toLowerCase()!=="created_by").map(c=>`  t.${c} = s.${c}`).join(`,
`),l+=`
WHEN NOT MATCHED THEN INSERT (${u.join(", ")})
`,l+=`VALUES (${u.map(c=>`s.${c}`).join(", ")});
`}else if(n==="merge-classic"){l=`SET DEFINE OFF;

`;for(let c=1;c<e.length;c++)l+=`MERGE INTO ${a} tgt
USING (SELECT`,l+=u.map(m=>{const y=e[c][d[m]],x=f[m];return`
  ${I(y,x,a)} AS ${m}`}).join(","),l+=`
FROM DUAL) src
ON (${s.map(m=>`tgt.${m} = src.${m}`).join(" AND ")})
`,l+=`WHEN MATCHED THEN UPDATE SET
`,l+=u.filter(m=>!s.some(y=>y.toLowerCase()===m.toLowerCase())&&m.toLowerCase()!=="created_time"&&m.toLowerCase()!=="created_by").map(m=>`  tgt.${m} = src.${m}`).join(`,
`),l+=`
WHEN NOT MATCHED THEN INSERT (${u.join(", ")})
`,l+=`VALUES (${u.map(m=>`src.${m}`).join(", ")});

`}const $=s.map(c=>{const m=e.slice(1).map(y=>{const x=d[c.toLowerCase()],Ie=y[x],Ae=f[c.toLowerCase()];return I(Ie,Ae,a)}).filter(y=>y!=="NULL");return`${c} IN (${m.join(", ")})`}).join(" AND ");return l+=`
--Check updated data in the last 5 minutes
SELECT * FROM ${a} WHERE updated_time >= SYSDATE - INTERVAL '5' MINUTE;`,l+=`
SELECT * FROM ${a} WHERE ${$};`,l}function I(e,t,n){const o=t.field.toLowerCase(),s=t.dataType.split("(")[0].toUpperCase(),r=t.dataType.match(/\((\d+)\)/);if(o.toLowerCase()==="config_id"&&s==="NUMBER")return`(SELECT MAX(${o})+1 FROM ${n})`;if(o==="system_config_id"&&n.toLowerCase()==="config.system_config")return`(SELECT MAX(CAST(${o} AS INT))+1 FROM ${n})`;if(o==="created_time"||o==="updated_time")return"SYSDATE";if(o==="created_by"||o==="updated_by")return"'SYSTEM'";if(e==null||e==="NULL"||e==="null")return"NULL";switch(s){case"VARCHAR2":case"VARCHAR":return`'${e.toString().replace(/'/g,"''")}'`;case"CHAR":return r?`RPAD('${e.toString().replace(/'/g,"''")}', ${r[1]})`:`'${e.toString().replace(/'/g,"''")}'`;case"NUMBER":return e;case"DATE":return`TO_DATE('${e}', 'YYYY-MM-DD')`;case"TIMESTAMP":return Se(e);case"CLOB":return G(e);case"BLOB":return Ce(e);default:return`'${e.toString().replace(/'/g,"''")}'`}}function Se(e){if(e.toUpperCase()==="SYSDATE")return"SYSDATE";let t,n;/^\d{2}-\d{2}-\d{4}$/.test(e)?(t="DD-MM-YYYY",n="DD-MM-YYYY"):/^\d{2}-\d{2}-\d{4} \d{2}:\d{2}:\d{2}$/.test(e)?(t="DD-MM-YYYY HH:mm:ss",n="DD-MM-YYYY HH24:MI:SS"):/^\d{4}-\d{2}-\d{2}$/.test(e)?(t="YYYY-MM-DD",n="YYYY-MM-DD"):/^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$/.test(e)?(t="YYYY-MM-DD HH:mm:ss",n="YYYY-MM-DD HH24:MI:SS"):/^\d{2}-\d{2}-\d{4} \d{2}\.\d{2}\.\d{2},\d{9}$/.test(e)?(t="DD-MM-YYYY HH.mm.ss,SSSSSSSSS",n="DD-MM-YYYY HH24:MI:SS.FF9"):/^\d{1,2}\/\d{1,2}\/\d{4} \d{1,2}:\d{2}:\d{2}(\.\d{6})? [AP]M$/.test(e)?(t="M/D/YYYY h:mm:ss.SSSSSS A",n="MM/DD/YYYY HH24:MI:SS.FF6"):(t="DD-MM-YYYY HH:mm:ss",n="DD-MM-YYYY HH24:MI:SS");const o=moment(e,t,!0);if(!o.isValid())return console.warn(`Invalid date format: ${e}. Using as-is.`),`TO_TIMESTAMP('${e.replace(/'/g,"''")}', '${n}')`;let s;return t==="DD/MM/YYYY"?(s=o.format("DD-MM-YYYY"),n="DD-MM-YYYY"):(s=o.format("YYYY-MM-DD HH:mm:ss.SSSSSS"),n="YYYY-MM-DD HH24:MI:SS.FF6"),`TO_TIMESTAMP('${s}', '${n}')`}function G(e){let n="",o=0,s=!0;for(let r=0;r<e.length;r++){let i=e[r];i==="'"||i==="‘"||i==="’"?i="''":(i==="“"||i==="”")&&(i='"'),(o+i.length>1e3||s)&&(s||(n+=`') || 
`),n+="to_clob('",o=0,s=!1),n+=i,o+=i.length}return n+="')",n}function Ce(e){return`UTL_RAW.CAST_TO_RAW('${e}')`}function Le(){var u;if(!p){C("No file selected. Please select a file to download.");return}const e=(u=h[p.name])==null?void 0:u.query;if(!e){C("No SQL query generated for the selected file.");return}const t=document.getElementById("downloadSQL"),n=t.textContent,o=t.style.backgroundColor;t.textContent="Downloading",t.style.backgroundColor="red",t.disabled=!0;const s=new Blob([e],{type:"text/plain"}),r=URL.createObjectURL(s),i=document.createElement("a"),a=p.name.replace(/\.xlsx$/,"");i.href=r,i.download=`${a}.sql`,setTimeout(()=>{document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(r),setTimeout(()=>{t.textContent=n,t.style.backgroundColor=o,t.disabled=!1},1e3)},0)}function we(){if(Object.keys(h).length===0){C("No queries generated yet.");return}const e=document.getElementById("downloadAll"),t=e.textContent,n=e.style.backgroundColor;e.textContent="Preparing...",e.style.backgroundColor="red",e.disabled=!0;const o=new JSZip;for(const[s,r]of Object.entries(h)){const i=s.replace(/\.xlsx$/,".sql");o.file(i,r.query)}o.generateAsync({type:"blob"}).then(s=>{const r=URL.createObjectURL(s),i=document.createElement("a"),a=new Date().toISOString().split("T")[0];i.href=r,i.download=`querify-${a}.zip`,e.textContent="Downloading...",document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(r)}).catch(s=>{console.error("Error generating zip file:",s),C("Failed to generate zip file. Please try again.")}).finally(()=>{setTimeout(()=>{e.textContent=t,e.style.backgroundColor=n,e.disabled=!1},1e3)})}function C(e){Y.textContent=e,Y.style.color="red",Y.style.display="block"}function v(){Y.textContent="",Y.style.display="none"}function Me(){D=!D,b.setOption("lineWrapping",D),j.style.textDecoration=D?"underline":"none"}function Te(){S.length>0&&B(),K()}function K(){const e=N.value;O.disabled=!(p&&(e==="merge-classic"||e==="insert"))}async function Ye(){if(!p||!h[p.name]){C("No valid SQL query to split.");return}const e=document.getElementById("splitSQL"),t=e.textContent,n=e.style.backgroundColor;e.textContent="Processing...",e.style.backgroundColor="red",e.disabled=!0;const o=h[p.name].query,s=N.value,r=90*1024,i=h[p.name].fullTableName;try{const{chunks:a,oversizedChunksCount:u}=$e(o,s,r,i),d=new JSZip;a.forEach(($,c)=>{const y=`${String(c+1).padStart(2,"0")}_${p.name.replace(/\.xlsx$/,"")}.sql`;d.file(y,$)});const f=await d.generateAsync({type:"blob"}),l=URL.createObjectURL(f),g=document.createElement("a");g.href=l,g.download=`${p.name.replace(/\.xlsx$/,"")}_split.zip`,e.textContent="Downloading...",document.body.appendChild(g),g.click(),document.body.removeChild(g),URL.revokeObjectURL(l),be(`SQL query split into ${a.length} chunks. ${u} chunk(s) exceed 90 KB.`)}catch(a){C(`Failed to split SQL: ${a.message}`)}finally{setTimeout(()=>{e.textContent=t,e.style.backgroundColor=n,e.disabled=!1},1e3)}}function $e(e,t,n,o){let s=[],r="",i=0;const u=e.split(/;(?=(?:[^']*'[^']*')*[^']*$)/).filter(d=>{const f=d.trim().toUpperCase();return!f.startsWith("SET DEFINE OFF")&&!f.startsWith("SELECT")&&(f.startsWith("INSERT")||f.startsWith("MERGE"))});for(const d of u){if(d.trim()==="")continue;const f=r+d+";";f.length>n&&r!==""?(s.push(r),r=d+";"):r=f,d.length+1>n&&(i++,console.log(`${i} - A single statement exceeds ${n} bytes and cannot be split further.`))}if(r!==""&&s.push(r),s.length===0)throw new Error("Unable to split the SQL query into chunks smaller than 90 KB.");return s=s.map(d=>"SET DEFINE OFF;"+d),s=s.map(d=>(xe(d,t),d+`
--Check updated data in the last 5 minutes
SELECT * FROM ${o} WHERE updated_time >= SYSDATE - INTERVAL '5' MINUTE;`)),{chunks:s,oversizedChunksCount:i}}function xe(e,t){let n;return t==="merge-classic"?n=e.match(/MERGE INTO (\w+\.?\w+)/i):t==="insert"&&(n=e.match(/INSERT INTO (\w+\.?\w+)/i)),n?n[1]:"unknown_table"}function be(e){Y.textContent=e,Y.style.color="green",Y.style.display="block"}function ve(e){e.preventDefault(),e.stopPropagation(),E.classList.add("drag-over")}function De(e){e.preventDefault(),e.stopPropagation(),E.classList.remove("drag-over")}function Ne(e){e.preventDefault(),e.stopPropagation(),E.classList.remove("drag-over");const t=Array.from(e.dataTransfer.files);_(t)}function Fe(){const e=document.createElement("div");e.className="about-popup";const t=document.createElement("span");t.className="about-popup-close",t.innerHTML="&times;",t.onclick=q;const n=document.createElement("div");n.className="about-popup-content markdown-body",fetch("src/styles/about-querify.md").then(o=>o.text()).then(o=>{n.innerHTML=marked.parse(o),e.appendChild(t),e.appendChild(n);const s=document.createElement("div");s.className="about-popup-overlay",s.onclick=q,document.body.appendChild(s),document.body.appendChild(e),s.style.display="block",e.style.display="block"}).catch(o=>{console.error("Error loading the about-querify.md file:",o),n.innerHTML="<p>Error loading content. Please try again later.</p>",e.appendChild(t),e.appendChild(n);const s=document.createElement("div");s.className="about-popup-overlay",s.onclick=q,document.body.appendChild(s),document.body.appendChild(e),s.style.display="block",e.style.display="block"})}function q(){const e=document.querySelector(".about-popup"),t=document.querySelector(".about-popup-overlay");e&&e.remove(),t&&t.remove()}}export{He as initQuerify};
//# sourceMappingURL=main-CZdoxjV5.js.map
