{"version":3,"file":"main-DmL8H2By.js","sources":["../../src/App.js","../../src/main.js"],"sourcesContent":["// App.js\nimport { AppState } from \"./core/state.js\";\nimport { Router } from \"./core/router.js\";\nimport { UIManager } from \"./core/uiManager.js\";\nimport { ResourceLoader } from \"./core/resourceLoader.js\";\nimport { Analytics } from \"./core/analytics.js\";\nimport { TOOLS_CONFIG } from \"./core/config.js\";\n\nclass App {\n  constructor() {\n    // Initialize core services\n    this.state = new AppState();\n    this.router = new Router(this);\n    this.ui = new UIManager(this);\n    this.resources = new ResourceLoader(this.state);\n    this.analytics = new Analytics();\n\n    // Bind methods\n    this.loadTool = this.loadTool.bind(this);\n    this.handleError = this.handleError.bind(this);\n\n    // Setup error handling\n    this.setupErrorHandling();\n  }\n\n  async init() {\n    try {\n      this.state.setState({ isLoading: true });\n      // Setup UI\n      this.ui.setupNavigation();\n\n      // Initialize routing\n      await this.router.initializeRouting();\n\n      this.state.setState({ isLoading: false });\n    } catch (error) {\n      this.handleError(\"Initialization failed\", error);\n    }\n  }\n\n  async loadTool(toolName) {\n    if (!TOOLS_CONFIG[toolName]) {\n      throw new Error(`Unknown tool: ${toolName}`);\n    }\n\n    try {\n      this.state.setState({ isLoading: true, error: null });\n      this.ui.showLoadingState();\n\n      // Load CSS first\n      // await this.resources.loadToolCSS(toolName);\n\n      // Load and initialize tool\n      const initFunction = await this.resources.loadToolModule(toolName);\n      const contentDiv = this.ui.clearContent();\n      await initFunction(contentDiv);\n\n      // Update state and UI\n      this.state.setState({\n        currentTool: toolName,\n        isLoading: false,\n      });\n      this.ui.updateActiveButton(toolName);\n\n      // Track usage\n      this.analytics.scheduleTracking(toolName);\n    } catch (error) {\n      this.handleError(`Failed to load tool ${toolName}`, error);\n    }\n  }\n\n  setupErrorHandling() {\n    window.onerror = (msg, src, line, col, error) => {\n      this.handleError(\"An unexpected error occurred\", error);\n    };\n\n    window.onunhandledrejection = (event) => {\n      this.handleError(\"An unexpected error occurred\", event.reason);\n    };\n  }\n\n  handleError(context, error) {\n    const errorMessage = `${context}: ${error.message}`;\n    console.error(errorMessage, error);\n\n    this.state.setState({\n      error: errorMessage,\n      isLoading: false,\n    });\n\n    this.ui.showError(errorMessage);\n  }\n}\n\nexport default App;\n","// main.js\nimport App from \"./App.js\";\nimport { DependencyLoader } from \"./utils/dependencyLoader.js\";\nimport { MobileNavigation } from \"./utils/mobileNavigations.js\";\nimport { TouchHandler } from \"./utils/touchHandler.js\";\nimport { ReloadManager } from \"./utils/reloadManager.js\";\nimport \"./styles/main.css\";\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  try {\n    // Load dependencies\n    await DependencyLoader.loadAll();\n\n    // Initialize main app\n    window.app = new App(); // Assign to window.app\n    await window.app.init();\n\n    // Initialize mobile features and utilities\n    new MobileNavigation();\n    new TouchHandler();\n    new ReloadManager().checkReload();\n  } catch (error) {\n    console.error(\"Failed to initialize app:\", error);\n    showErrorMessage();\n  }\n});\n\nfunction showErrorMessage() {\n  const errorDiv = document.createElement(\"div\");\n  errorDiv.className = \"error-message\";\n  errorDiv.innerHTML = `\n    <h2>Failed to initialize application</h2>\n    <p>Please refresh the page or contact me if the problem persists.</p>\n    <button onclick=\"window.location.reload()\">Refresh Page</button>\n  `;\n  document.body.appendChild(errorDiv);\n}\n"],"names":["App","AppState","Router","UIManager","ResourceLoader","Analytics","error","toolName","TOOLS_CONFIG","initFunction","contentDiv","msg","src","line","col","event","context","errorMessage","DependencyLoader","MobileNavigation","TouchHandler","ReloadManager","showErrorMessage","errorDiv"],"mappings":"02BAQA,MAAMA,CAAI,CACR,aAAc,CAEZ,KAAK,MAAQ,IAAIC,EACjB,KAAK,OAAS,IAAIC,EAAO,IAAI,EAC7B,KAAK,GAAK,IAAIC,EAAU,IAAI,EAC5B,KAAK,UAAY,IAAIC,EAAe,KAAK,KAAK,EAC9C,KAAK,UAAY,IAAIC,EAGrB,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAG7C,KAAK,mBAAoB,CAC7B,CAEE,MAAM,MAAO,CACX,GAAI,CACF,KAAK,MAAM,SAAS,CAAE,UAAW,EAAI,CAAE,EAEvC,KAAK,GAAG,gBAAiB,EAGzB,MAAM,KAAK,OAAO,kBAAmB,EAErC,KAAK,MAAM,SAAS,CAAE,UAAW,EAAK,CAAE,CACzC,OAAQC,EAAO,CACd,KAAK,YAAY,wBAAyBA,CAAK,CACrD,CACA,CAEE,MAAM,SAASC,EAAU,CACvB,GAAI,CAACC,EAAaD,CAAQ,EACxB,MAAM,IAAI,MAAM,iBAAiBA,CAAQ,EAAE,EAG7C,GAAI,CACF,KAAK,MAAM,SAAS,CAAE,UAAW,GAAM,MAAO,KAAM,EACpD,KAAK,GAAG,iBAAkB,EAM1B,MAAME,EAAe,MAAM,KAAK,UAAU,eAAeF,CAAQ,EAC3DG,EAAa,KAAK,GAAG,aAAc,EACzC,MAAMD,EAAaC,CAAU,EAG7B,KAAK,MAAM,SAAS,CAClB,YAAaH,EACb,UAAW,EACnB,CAAO,EACD,KAAK,GAAG,mBAAmBA,CAAQ,EAGnC,KAAK,UAAU,iBAAiBA,CAAQ,CACzC,OAAQD,EAAO,CACd,KAAK,YAAY,uBAAuBC,CAAQ,GAAID,CAAK,CAC/D,CACA,CAEE,oBAAqB,CACnB,OAAO,QAAU,CAACK,EAAKC,EAAKC,EAAMC,EAAKR,IAAU,CAC/C,KAAK,YAAY,+BAAgCA,CAAK,CACvD,EAED,OAAO,qBAAwBS,GAAU,CACvC,KAAK,YAAY,+BAAgCA,EAAM,MAAM,CAC9D,CACL,CAEE,YAAYC,EAASV,EAAO,CAC1B,MAAMW,EAAe,GAAGD,CAAO,KAAKV,EAAM,OAAO,GACjD,QAAQ,MAAMW,EAAcX,CAAK,EAEjC,KAAK,MAAM,SAAS,CAClB,MAAOW,EACP,UAAW,EACjB,CAAK,EAED,KAAK,GAAG,UAAUA,CAAY,CAClC,CACA,CCpFA,SAAS,iBAAiB,mBAAoB,SAAY,CACxD,GAAI,CAEF,MAAMC,EAAiB,QAAS,EAGhC,OAAO,IAAM,IAAIlB,EACjB,MAAM,OAAO,IAAI,KAAM,EAGvB,IAAImB,EACJ,IAAIC,EACJ,IAAIC,EAAe,EAAC,YAAa,CAClC,OAAQf,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,EAChDgB,EAAkB,CACtB,CACA,CAAC,EAED,SAASA,GAAmB,CAC1B,MAAMC,EAAW,SAAS,cAAc,KAAK,EAC7CA,EAAS,UAAY,gBACrBA,EAAS,UAAY;AAAA;AAAA;AAAA;AAAA,IAKrB,SAAS,KAAK,YAAYA,CAAQ,CACpC"}