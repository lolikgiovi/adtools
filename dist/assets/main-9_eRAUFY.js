import{D as v,c as T}from"./utils-P83EfEoD.js";import{h as f}from"./vendor-ItrcfzAD.js";const L="quickquery_schemas",A=/^[a-zA-Z][a-zA-Z0-9_$#]*$/,M=30,N=128,E=100;class I{constructor(){this.STORAGE_KEY=L}parseTableIdentifier(e){const[t,a]=e.split(".");if(!t||!a)throw new Error('Invalid table name format. Expected "schema_name.table_name"');return{schemaName:t,tableName:a}}getStorageData(){try{const e=localStorage.getItem(this.STORAGE_KEY);return e?JSON.parse(e):{schemas:{},lastUpdated:new Date().toISOString()}}catch(e){return console.error("Error reading storage:",e),{schemas:{},lastUpdated:new Date().toISOString()}}}saveStorageData(e){try{return e.lastUpdated=new Date().toISOString(),localStorage.setItem(this.STORAGE_KEY,JSON.stringify(e)),!0}catch(t){return console.error("Error saving to storage:",t),!1}}saveSchema(e,t,a=null){try{const{schemaName:s,tableName:n}=this.parseTableIdentifier(e),r=this.getStorageData();return r.schemas[s]||(r.schemas[s]={tables:{}}),r.schemas[s].tables[n]={schema:t,data:a?a.slice(0,E):null,timestamp:new Date().toISOString()},this.saveStorageData(r)}catch(s){return console.error("Error saving schema:",s),!1}}loadSchema(e,t=!1){var a;try{const{schemaName:s,tableName:n}=this.parseTableIdentifier(e),i=(a=this.getStorageData().schemas[s])==null?void 0:a.tables[n];return i?t?{schema:i.schema,data:i.data||null}:i.schema:null}catch(s){return console.error("Error loading schema:",s),null}}updateTableData(e,t){var a;try{const{schemaName:s,tableName:n}=this.parseTableIdentifier(e),r=this.getStorageData();return(a=r.schemas[s])!=null&&a.tables[n]?(r.schemas[s].tables[n].data=t.slice(0,E),r.schemas[s].tables[n].timestamp=new Date().toISOString(),this.saveStorageData(r)):!1}catch(s){return console.error("Error updating table data:",s),!1}}deleteSchema(e){var t;try{const{schemaName:a,tableName:s}=this.parseTableIdentifier(e),n=this.getStorageData();return(t=n.schemas[a])!=null&&t.tables[s]?(delete n.schemas[a].tables[s],Object.keys(n.schemas[a].tables).length===0&&delete n.schemas[a],this.saveStorageData(n)):!1}catch(a){return console.error("Error deleting schema:",a),!1}}clearAllSchemas(){try{return localStorage.removeItem(this.STORAGE_KEY),!0}catch(e){return console.error("Error clearing schemas:",e),!1}}getAllTables(){const e=this.getStorageData(),t=[];return Object.entries(e.schemas).forEach(([a,s])=>{Object.entries(s.tables).forEach(([n,r])=>{t.push({fullName:`${a}.${n}`,schemaName:a,tableName:n,timestamp:r.timestamp})})}),t.sort((a,s)=>new Date(s.timestamp)-new Date(a.timestamp))}getByteLength(e){return new TextEncoder().encode(e).length}validateOracleName(e,t="schema"){if(!e||!A.test(e))return!1;const a=this.getByteLength(e);return!(t==="schema"&&a>M||t==="table"&&a>N)}sqlLikeToRegex(e){return new RegExp("^"+e.replace(/%/g,".*").replace(/_/g,".").replace(/\[/g,"\\[").replace(/\]/g,"\\]")+"$","i")}getSchemaAbbreviations(e){const t=e.split("_"),a=new Set;a.add(t.map(s=>{var n;return(n=s[0])==null?void 0:n.toLowerCase()}).join("")),t.length>2&&a.add(t.slice(0,2).map(s=>{var n;return(n=s[0])==null?void 0:n.toLowerCase()}).join(""));for(let s=0;s<t.length-1;s++)a.add(t.slice(s,s+2).map(n=>{var r;return(r=n[0])==null?void 0:r.toLowerCase()}).join(""));return a}getScore(e,t,a){const s=a.toLowerCase();e=e.toLowerCase(),t=t==null?void 0:t.toLowerCase();const n=this.getSchemaAbbreviations(e);return e===s?7:t===s?6:n.has(s)?5:e.startsWith(s)?4:t!=null&&t.startsWith(s)?3:e.includes(s)?2:t!=null&&t.includes(s)?1:0}searchSavedSchemas(e){const t=this.getAllTables();if(!e)return t;let[a,s]=e.split(".");if(s){const n=this.sqlLikeToRegex(`%${a}%`),r=this.sqlLikeToRegex(`%${s}%`);return t.filter(i=>{const c=this.getSchemaAbbreviations(i.schemaName);return(n.test(i.schemaName)||c.has(a.toLowerCase()))&&r.test(i.tableName)}).sort((i,c)=>{const o=this.getSchemaAbbreviations(i.schemaName),d=this.getSchemaAbbreviations(c.schemaName),l=a.toLowerCase()===i.schemaName.toLowerCase()||o.has(a.toLowerCase()),m=a.toLowerCase()===c.schemaName.toLowerCase()||d.has(a.toLowerCase());if(l!==m)return m?1:-1;const h=s.toLowerCase()===i.tableName.toLowerCase(),p=s.toLowerCase()===c.tableName.toLowerCase();return h?-1:p?1:0})}else{const n=`%${a}%`,r=this.sqlLikeToRegex(n);return t.filter(i=>{const c=this.getSchemaAbbreviations(i.schemaName);return r.test(i.schemaName)||r.test(i.tableName)||c.has(a.toLowerCase())}).sort((i,c)=>{const o=this.getScore(i.schemaName,i.tableName,a);return this.getScore(c.schemaName,c.tableName,a)-o||i.schemaName.localeCompare(c.schemaName)})}}validateSchemaFormat(e){return!e||typeof e!="object"?!1:Object.entries(e).every(([t,a])=>typeof a!="object"?!1:Object.entries(a).every(([s,n])=>Array.isArray(n)&&n.every(r=>Array.isArray(r)&&r.length>=3&&typeof r[0]=="string"&&typeof r[1]=="string"&&typeof r[2]=="string")))}}class Y{constructor(){}processValue(e,t,a,s,n){const r={time:["created_time","updated_time"],by:["created_by","updated_by"]};if(r.time.includes(s)){const d=!e,l=!/[-/]/.test(e);return d||l?"SYSDATE":this.formatTimestamp(e)}if(r.by.includes(s))return e!=null&&e.trim()?`'${e.replace(/'/g,"''")}'`:"'SYSTEM'";if(e==null||e===""||(e==null?void 0:e.toLowerCase())==="null"){if((a==null?void 0:a.toLowerCase())!=="yes")throw new Error(`NULL value not allowed for non-nullable field "${s}"`);return"NULL"}const c=t.toUpperCase();if(s==="config_id"&&c==="NUMBER"||s.endsWith("_id")&&(e==null?void 0:e.toLowerCase())==="max")return`(SELECT MAX(${s})+1 FROM ${n})`;if(s==="config_id"&&c.startsWith("VARCHAR"))return e.toLowerCase()==="uuid"||!this.isValidUUID(e)?`'${crypto.randomUUID()}'`:`'${e}'`;if(s==="system_config_id")return`(SELECT MAX(CAST(${s} AS INT))+1 FROM ${n})`;const o=this.parseDataType(t);switch(o.type){case"NUMBER":if(o.precision===1&&o.scale===0){if(e!=="0"&&e!=="1"&&e!==0&&e!==1)throw new Error(`Invalid boolean value "${e}" for field "${s}". Only 0 or 1 are allowed.`);return e}const d=e.toString().replace(",","."),l=parseFloat(d);if(isNaN(l))throw new Error(`Invalid numeric value "${e}" for field "${s}"`);return o.precision&&this.validateNumberPrecision(l,o.precision,o.scale,s),d;case"VARCHAR":case"VARCHAR2":case"CHAR":const m=36;if(e.toLowerCase()==="uuid"){if(o.maxLength&&o.maxLength<m)throw new Error(`Field "${s}" length (${o.maxLength}) is too small to store UUID. Minimum required length is ${m}.`);return`'${crypto.randomUUID()}'`}if(o.maxLength&&(o.unit==="BYTE"?new TextEncoder().encode(e).length:e.length)>o.maxLength)throw new Error(`Value exceeds maximum length of ${o.maxLength} ${o.unit} for field "${s}"`);return`'${e.replace(/'/g,"''")}'`;case"DATE":case"TIMESTAMP":try{return this.formatTimestamp(e)}catch(h){throw new Error(`Invalid date value "${e}" for field "${s}": ${h.message}`)}case"CLOB":return this.formatCLOB(e);case"BLOB":return this.formatBLOB(e);default:return`'${e.replace(/'/g,"''")}'`}}parseDataType(e){const t=e.toUpperCase(),a=t.match(/NUMBER\((\d+)(?:,\s*(\d+))?\)/);if(a)return{type:"NUMBER",precision:parseInt(a[1]),scale:a[2]?parseInt(a[2]):0};const s=t.match(/(VARCHAR2?|CHAR)\((\d+)(?:\s+(BYTE|CHAR))?\)/);return s?{type:s[1],maxLength:parseInt(s[2]),unit:s[3]||"BYTE"}:t.startsWith("TIMESTAMP")?{type:"TIMESTAMP"}:t==="DATE"?{type:"DATE"}:t==="CLOB"?{type:"CLOB"}:t==="BLOB"?{type:"BLOB"}:t==="NUMBER"?{type:"NUMBER"}:{type:t}}validateNumberPrecision(e,t,a,s){var o;const r=Math.abs(e).toString().split("."),i=r[0].length,c=((o=r[1])==null?void 0:o.length)||0;if(i+c>t)throw new Error(`Value ${e} exceeds maximum precision of ${t} for field "${s}"`);if(a!==void 0&&c>a)throw new Error(`Value ${e} exceeds maximum scale of ${a} (${t},${a}) for field "${s}"`);if(a!==void 0&&i>t-a)throw new Error(`Integer part of ${e} exceeds maximum allowed digits for field "${s}"`)}findPrimaryKeys(e,t){if(t.toLowerCase().endsWith("config")){const s=e.find(n=>n[0].toLowerCase()==="parameter_key");if(s)return[s[0].toLowerCase()]}const a=e.filter(s=>s[2].toLowerCase().includes("pk")).map(s=>s[0]);return a.length>0?a:[e[0][0].toLowerCase()]}isValidUUID(e){return/^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)}formatTimestamp(e){if(!e)return"NULL";const t=e.toUpperCase();if(t==="SYSDATE"||t==="CURRENT_TIMESTAMP")return t;try{if(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|[+-]\d{2}:?\d{2})?$/.test(e)){const n=f(e);if(n.isValid()){const r=e.match(/\.(\d+)/),i=r?Math.min(r[1].length,9):0;return i>0?`TO_TIMESTAMP_TZ('${n.format("YYYY-MM-DD HH:mm:ss")}${e.substring(e.indexOf("."),e.indexOf(".")+i+1)}${n.format("Z")}', 'YYYY-MM-DD HH24:MI:SS.FF${i}TZH:TZM')`:`TO_TIMESTAMP_TZ('${n.format("YYYY-MM-DD HH:mm:ssZ")}', 'YYYY-MM-DD HH24:MI:SSTZH:TZM')`}}if(e.includes(",")){const n=e.replace(/(\d{2})\.(\d{2})\.(\d{2}),/,"$1:$2:$3,"),[r,i]=n.split(","),c=Math.min((i==null?void 0:i.length)||0,9),o=f(r,"DD-MM-YYYY HH:mm:ss",!0);if(o.isValid())return`TO_TIMESTAMP('${o.format("YYYY-MM-DD HH:mm:ss")}.${i.substring(0,c)}', 'YYYY-MM-DD HH24:MI:SS.FF${c}')`}const a=["YYYY-MM-DD HH:mm:ss","DD-MM-YYYY HH:mm:ss","MM/DD/YYYY HH:mm:ss","DD/MM/YYYY HH:mm:ss","YYYY-MM-DD","DD-MM-YYYY","MM/DD/YYYY","DD/MM/YYYY","DD-MMM-YYYY","DD-MMM-YY","DD.MM.YYYY HH:mm:ss","DD.MM.YYYY","YYYY/MM/DD HH:mm:ss","YYYY/MM/DD"];for(const n of a){const r=f(e,n,!0);if(r.isValid())return`TO_TIMESTAMP('${r.format("YYYY-MM-DD HH:mm:ss")}', 'YYYY-MM-DD HH24:MI:SS')`}if(/[AaPpMm]/.test(e)){const n=["MM/DD/YYYY hh:mm:ss A","DD-MM-YYYY hh:mm:ss A","YYYY-MM-DD hh:mm:ss A","DD/MM/YYYY hh:mm:ss A","MM-DD-YYYY hh:mm:ss A"];for(const r of n){const i=f(e,r,!0);if(i.isValid())return`TO_TIMESTAMP('${i.format("YYYY-MM-DD HH:mm:ss")}', 'YYYY-MM-DD HH24:MI:SS')`}}const s=f(e);if(s.isValid())return`TO_TIMESTAMP('${s.format("YYYY-MM-DD HH:mm:ss")}', 'YYYY-MM-DD HH24:MI:SS')`;throw new Error(`Unable to parse date format: ${e}`)}catch(a){throw console.error(`Error parsing timestamp: ${e}`,a),new Error(`Invalid timestamp format: ${e}. Please use a valid date/time format.`)}}formatCLOB(e){let a="",s=0,n=!0;for(let r=0;r<e.length;r++){let i=e[r];i==="'"||i==="‘"||i==="’"?i="''":(i==="“"||i==="”")&&(i='"'),(s+i.length>1e3||n)&&(n||(a+=`') || 
`),a+="to_clob('",s=0,n=!1),a+=i,s+=i.length}return a+="')",a}formatBLOB(e){return`UTL_RAW.CAST_TO_RAW('${e}')`}}const B=new Set(["access","add","all","alter","and","any","as","asc","audit","between","by","char","check","cluster","column","comment","compress","connect","create","current","date","decimal","default","delete","desc","distinct","drop","else","exclusive","exists","file","float","for","from","grant","group","having","identified","immediate","in","increment","index","initial","insert","integer","intersect","into","is","level","like","lock","long","maxextents","minus","mlslabel","mode","modify","noaudit","nocompress","not","nowait","null","number","of","offline","on","online","option","or","order","pctfree","prior","privileges","public","raw","rename","resource","revoke","row","rowid","rownum","rows","select","session","set","share","size","smallint","start","successful","synonym","sysdate","table","then","to","trigger","uid","union","unique","update","user","validate","values","varchar","varchar2","view","whenever","where","with","sequence","type","package","body"]),x=[["TABLE_ID","VARCHAR2(36)","PK","","1"],["DESC_ID","VARCHAR2(500)","PK","","2"],["DESC_EN","VARCHAR2(500)","No","","3"],["AMOUNT","NUMBER(15,2)","Yes","","4"],["SEQUENCE","NUMBER(3,0)","No","","5"],["IS_ACTIVE","NUMBER","No","","6"],["CREATED_TIME","TIMESTAMP(6)","No","","7"],["CREATED_BY","VARCHAR2(36)","No","","8"],["UPDATED_TIME","TIMESTAMP(6)","No","","9"],["UPDATED_BY","VARCHAR2(36)","No","","10"]],R=[["TABLE_ID","DESC_ID","DESC_EN","AMOUNT","SEQUENCE","IS_ACTIVE","CREATED_TIME","CREATED_BY","UPDATED_TIME","UPDATED_BY"],["TABLE_ID_1","DESC_ID_1","DESC_EN_1","100000","1","1","CREATED_TIME_1","CREATED_BY_1","UPDATED_TIME_1","UPDATED_BY_1"],["TABLE_ID_2","DESC_ID_2","DESC_EN_2","","2","1","CREATED_TIME_2","CREATED_BY_2","UPDATED_TIME_2","UPDATED_BY_2"]],F={data:[["","","",""]],colHeaders:["Field Name","Data Type","Nullable/PK","Default","Field Order","Comments"],columns:[{renderer:function(u,e,t,a,s,n,r){Handsontable.renderers.TextRenderer.apply(this,arguments),e.style.fontWeight="bold"}},{},{type:"dropdown",source:["Yes","No","PK"],validator:function(u,e){e(["Yes","No","PK","yes","no","pk","Yes","No","Pk","Y","N","y","n"].includes(u))},renderer:function(u,e,t,a,s,n,r){Handsontable.renderers.DropdownRenderer.apply(this,arguments),e.style.textAlign="center"}},{},{type:"numeric",validator:function(u,e){e(u===null||u===""||!isNaN(parseFloat(u)))},renderer:function(u,e,t,a,s,n,r){Handsontable.renderers.NumericRenderer.apply(this,arguments),e.style.textAlign="center"}},{}],height:"auto",licenseKey:"non-commercial-and-evaluation",minCols:6,minRows:1,contextMenu:!0,mergeCells:!0,manualColumnResize:!0,afterChange:u=>{u&&(void 0).updateDataSpreadsheet()},afterGetColHeader:function(u,e){const t=e.querySelector(".colHeader");t&&(t.style.fontWeight="bold")}},$={data:[[],[]],colHeaders:!0,rowHeaders:!0,height:"auto",licenseKey:"non-commercial-and-evaluation",minCols:1,contextMenu:!0,manualColumnResize:!0,stretchH:"none",className:"hide-scrollbar",cells:function(u,e){const t={};return u===0&&(t.renderer=function(a,s,n,r,i,c,o){Handsontable.renderers.TextRenderer.apply(this,arguments),s.style.fontWeight="bold",s.style.textAlign="center"}),t}};class O{validateAttachment(e,t,a,s){if(!e||!(s!=null&&s.length))return null;const n=s.find(i=>i.name.toLowerCase()===e.toLowerCase());if(!n)return null;const r=t.toUpperCase();if(["BLOB","CLOB","VARCHAR","VARCHAR2","CHAR"].includes(r)){if(["VARCHAR","VARCHAR2","CHAR"].includes(r))return this.handleVarcharType(n,a);if(["CLOB"].includes(r))return this.handleClobType(n)}else return null}handleVarcharType(e,t){if(e.type.includes("text")){const a=e.processedFormats.original;if(a.length<=t)return a}else{const a=e.processedFormats.base64;if(a.length<=t)return a}return console.warn("Attachment not fit to be attached, placing filename as placeholder"),null}handleClobType(e){return e.type.includes("text")?e.processedFormats.original:e.processedFormats.base64}}class _{constructor(){this.ValueProcessorService=new Y,this.attachmentValidationService=new O}generateQuery(e,t,a,s,n){const r=s[0].map(h=>h.toLowerCase()),i=s.slice(1).filter(h=>h.some(p=>p!==null&&p!=="")),c=new Map(a.map(h=>[h[0].toLowerCase(),h])),o=i.map((h,p)=>{try{return r.map((g,w)=>{const C=c.get(g.toLowerCase()),[,y,D]=C;let S=h[w];const b=this.attachmentValidationService.validateAttachment(S,y,this.getMaxLength(y),n);return S=b!==null?b:S,{fieldName:g,formattedValue:this.ValueProcessorService.processValue(S,y,D,g,e)}})}catch(g){throw new Error(`Row ${p+2}: ${g.message}`)}}),d=this.ValueProcessorService.findPrimaryKeys(a,e);let l=`SET DEFINE OFF;

`;t==="insert"?o.forEach(h=>{l+=this.generateInsertStatement(e,h),l+=`

`}):o.forEach(h=>{l+=this.generateMergeStatement(e,h,d),l+=`

`});const m=this.generateSelectStatement(e,d,o);return m&&(l+=m),l}generateInsertStatement(e,t){const a=t.map(n=>this.formatFieldName(n.fieldName)),s=t.map(n=>n.formattedValue);return`INSERT INTO ${e} (${a.join(", ")}) 
VALUES (${s.join(", ")});`}generateMergeStatement(e,t,a){const s=a.map(l=>l.toLowerCase()),n=t.map(l=>`
  ${l.formattedValue} AS ${this.formatFieldName(l.fieldName)}`).join(","),r=s.map(l=>`tgt.${this.formatFieldName(l).toLowerCase()} = src.${this.formatFieldName(l).toLowerCase()}`).join(" AND "),i=t.filter(l=>!s.includes(l.fieldName)&&!["created_time","created_by"].includes(l.fieldName)).map(l=>`  tgt.${this.formatFieldName(l.fieldName)} = src.${this.formatFieldName(l.fieldName)}`).join(`,
`),c=t.map(l=>this.formatFieldName(l.fieldName)).join(", "),o=t.map(l=>`src.${this.formatFieldName(l.fieldName)}`).join(", ");let d=`MERGE INTO ${e} tgt`;return d+=`
USING (SELECT${n}
  FROM DUAL) src`,d+=`
ON (${r})`,d+=`
WHEN MATCHED THEN UPDATE SET
${i}`,d+=`
WHEN NOT MATCHED THEN INSERT (${c})
VALUES (${o});`,d}generateSelectStatement(e,t,a){if(t.length===0||a.length===0)return null;const s=new Map(t.map(i=>[i.toLowerCase(),new Set]));a.forEach(i=>{i.forEach(c=>{s.has(c.fieldName)&&c.formattedValue!=="NULL"&&s.get(c.fieldName).add(c.formattedValue)})});const n=[];if(s.forEach((i,c)=>{i.size>0&&n.push(`${this.formatFieldName(c)} IN (${Array.from(i).join(", ")})`)}),n.length===0)return null;let r=`
SELECT * FROM ${e} WHERE ${n.join(" AND ")} ORDER BY created_time ASC;`;return r+=`
SELECT ${t.map(i=>i.toLowerCase()).join(", ")}, updated_time FROM ${e} WHERE updated_time >= SYSDATE - INTERVAL '5' MINUTE;`,r}formatFieldName(e){return B.has(e.toLowerCase())?`"${e.toUpperCase()}"`:e}getMaxLength(e){const t=e.match(/\((\d+)(?:\s*\w+)?\)/);return t?parseInt(t[1]):null}}class k{constructor(){}validateSchema(e){if(e.length===0)throw new Error("Schema Validation Error:<br>Please fill in the schema (see the left panel).");const t=[],a=[];if(e.forEach(s=>{const[n,r,i]=s;this.isValidOracleDataType(r)||t.push(`${r} (in field ${n})`),this.isValidNullableDataType(i)||a.push(`${i} (in field ${n})`)}),t.length>0||a.length>0){const s=[];throw t.length>0&&s.push(`Invalid Oracle SQL Data Types: ${t.join(", ")}`),a.length>0&&s.push(`Invalid nullable values: ${a.join(", ")}. Must be 'Yes', 'No', or 'PK'`),new Error(`Schema Validation Error:<br>${s.join("<br>")}`)}return!0}isValidOracleDataType(e){return["NUMBER","VARCHAR","VARCHAR2","DATE","TIMESTAMP","CHAR","CLOB","BLOB"].some(a=>e.toUpperCase().startsWith(a))}isValidNullableDataType(e){return["Yes","No","PK","yes","no","pk","Y","N","y","n"].includes(e)}matchSchemaWithData(e,t){var l,m;const a=e.some(h=>h.some(p=>p!==null&&p!=="")),s=(l=t[0])==null?void 0:l.some(h=>h!==null&&h!==""),n=(m=t[1])==null?void 0:m.some(h=>h!==null&&h!=="");if(!a||!s||!n)throw new Error("Incomplete data. Please fill in both schema and data sheets.");const r=e.map(h=>h[0].toLowerCase()),i=t[0].map(h=>h==null?void 0:h.toLowerCase()),c=i.findIndex(h=>!h);if(c!==-1)throw new Error(`Field Name Error:<br>Empty field name found in data input at column ${c+1}`);const o=i.filter(h=>!r.includes(h)),d=r.filter(h=>!i.includes(h));if(o.length>0||d.length>0){const h=[];throw o.length>0&&h.push(`Fields in data but not in schema: ${o.join(", ")}`),d.length>0&&h.push(`Fields in schema but not in data: ${d.join(", ")}`),new Error(`Field Mismatch Error:<br>${h.join("<br>")}`)}return!0}}function H(u){return u[0][0]==="Column Name"}class V{constructor(){this.splitRegex=/\s*;\s*/g,this.maxChunkSize=90*1024}getByteSize(e){return new TextEncoder().encode(e).length}generateValidationQuery(e){return`

SELECT COUNT(*) FROM ${e} WHERE updated_time >= SYSDATE - INTERVAL '10' MINUTE;`}cleanSql(e){return e.split(this.splitRegex).filter(a=>{const s=a.trim().toLowerCase();return!s.startsWith("select")&&!s.startsWith("set define off")}).map(a=>a.trim()).filter(a=>a).join(`;

`)+";"}splitSql(e,t){const a=[];let s=0;const n=`SET DEFINE OFF;

`,r=this.generateValidationQuery(t),c=this.cleanSql(e).split(this.splitRegex).map(m=>m.trim()).filter(m=>m);let o=n,d=this.getByteSize(n);const l=this.getByteSize(r);for(const m of c){const h=this.getByteSize(m);if(h>this.maxChunkSize){a.push(n+m+";"+r),s++;continue}d+h+l>this.maxChunkSize?(o!==n&&a.push(o.trim()+";"+r),o=n+m,d=this.getByteSize(n)+h):(o=o===n?n+m:`${o};

${m}`,d+=h)}return o!==n&&a.push(o.trim()+";"+r),{chunks:a,oversizedChunksCount:s}}}class P{constructor(){this.attachmentsContainer=null,this.fileContents={}}async processAttachments(e){console.log("Processing attachments");const t=[];for(const a of e){console.log("Processing file:",a.name);const s=a.name.replace(/\s+/g,"_"),n=s.split(".").pop().toLowerCase(),r={name:s,type:a.type,size:a.size,processedFormats:{original:null,base64:null,sizes:{original:0,base64:0}}};try{switch(n){case"jpg":case"jpeg":case"png":case"pdf":await this.handleMediaFile(a,r);break;case"txt":case"html":case"json":await this.handleTextFile(a,r);break;default:console.warn(`Unsupported file type: ${n}`)}t.push(r)}catch(i){console.error(`Error processing file ${a.name}:`,i)}}return t}async handleMediaFile(e,t){const a=await this.readFileAs(e,"dataURL");t.processedFormats.base64=a,t.processedFormats.sizes.base64=a.length}async handleTextFile(e,t){const a=await this.readFileAs(e,"text");t.processedFormats.original=a,t.processedFormats.contentType="text/plain";const s=a.trim();if(!s){t.processedFormats.sizes.original=0;return}if(s.match(/^data:.*?;base64,/)){t.type="text/base64",t.processedFormats.contentType="text/base64",t.processedFormats.base64=s;const n=s.split(",")[1];try{const r=atob(n);t.processedFormats.sizes.original=r.length,t.processedFormats.sizes.base64=s.length}catch{t.processedFormats.sizes.original=new TextEncoder().encode(a).length}}else t.processedFormats.sizes.original=new TextEncoder().encode(a).length}readFileAs(e,t){return new Promise((a,s)=>{const n=new FileReader;switch(n.onload=()=>a(n.result),n.onerror=()=>s(new Error("Error reading file")),t){case"arrayBuffer":n.readAsArrayBuffer(e);break;case"dataURL":n.readAsDataURL(e);break;case"text":n.readAsText(e);break}})}}const z=`<div class="tool-container quick-query-tool-container">
    <div class="quick-query-content">
        <div class="content-a">
            <div class="quick-query-left-panel">
                <div class="button-group">
                    <select id="queryTypeSelect">
                        <option value="merge">MERGE INTO</option>
                        <option value="insert">INSERT INTO</option>
                    </select>
                    <input type="text" id="tableNameInput" placeholder="schema_name.table_name"
                        value="schema_name.table_name">
                </div>
                <div class="button-group quick-query-left-controls">
                    <button id="showSavedSchemas">Manage Saved Schemas</button>
                    <button id="addNewSchemaRow">Add row</button>
                    <button id="removeLastSchemaRow">Remove last row</button>
                    <button id="clearAll">Clear All</button>
                    <button id="generateQuery">Generate Query</button>
                </div>

                <div id="spreadsheet-schema"></div>

                <div id="attachments-container" class="attachment-container-hide">
                    <p>Drag and drop attachments here or click to select. Supports: txt, jpg, png ,
                        html, pdf and json</p>
                    <input type="file" id="attachmentsInput" accept=".txt, .jpg, .jpeg, .png , .html, .pdf, .json"
                        multiple style="display: none;" />
                </div>
                <div id="files-container"></div>

                <div id="guideContainer">
                </div>
            </div>
            <div class="quick-query-right-panel">
                <div class="button-group quick-query-right-controls">
                    <button id="toggleWordWrap">Word Wrap: Off</button>
                    <button id="copySQL">Copy SQL</button>
                    <button id="splitSQL">Split SQL</button>
                    <button id="downloadSQL">Download SQL</button>
                </div>
                <div id="warningMessages"></div>
                <div id="errorMessages"></div>
                <div id="queryEditor" class="quick-query-content-area"></div>
            </div>
        </div>
        <div class="content-b">
            <div class="button-group">
                <h3>Data Input</h3>
                <p>Note: First row of data must be field names.</p>
                <div class="simulate-buttons">
                    <button id="addFieldNames">Add field names from schema</button>
                    <button id="addDataRow">Add Row</button>
                    <button id="removeDataRow">Remove Last Row</button>
                    <button id="clearData">Clear Data</button>
                </div>
            </div>
            <div id="spreadsheet-data"></div>
        </div>
    </div>
</div>

<div id="schemaOverlay" class="schema-overlay hidden">
    <div class="schema-modal">
        <div class="schema-modal-header">
            <h3>Saved Schemas</h3>
            <div class="schema-modal-actions">
                <button id="clearAllSchemas" class="action-button">Clear All</button>
                <button id="exportSchemas" class="action-button">Export</button>
                <button id="importSchemas" class="action-button">Import</button>
                <button id="closeSchemaOverlay" class="overlay-close-button">&times;</button>
            </div>
            <input type="file" id="schemaFileInput" accept=".json" style="display: none;">
        </div>
        <div class="schema-modal-content">
            <div id="savedSchemasList"></div>
        </div>
    </div>
</div>

<div id="fileViewerOverlay" class="file-viewer-overlay hidden">
    <div class="file-viewer-modal">
        <div class="file-viewer-header">
            <h3 id="fileViewerTitle">File Name</h3>
            <button id="closeFileViewer" class="overlay-close-button">&times;</button>
        </div>

        <div class="file-viewer-tabs">
            <button class="tab-button active" data-tab="original">Original</button>
            <button class="tab-button" data-tab="processed">Processed</button>
        </div>

        <div class="file-viewer-content">
            <div id="originalContent" class="tab-content active">
                <!-- Content will be dynamically inserted -->
            </div>
            <div id="processedContent" class="tab-content">
                <!-- Content will be dynamically inserted -->
            </div>
        </div>

        <div class="file-viewer-metadata">
            <div id="fileMetadata">
                <div class="metadata-grid">
                    <div id="fileType">File Type: -</div>
                    <div id="fileSize">Size: -</div>
                    <div id="base64Size" class="hidden">Base64 Size: -</div>
                    <div id="dimensions" class="hidden">Dimensions: -</div>
                    <div id="lineCount" class="hidden">Lines: -</div>
                    <div id="charCount" class="hidden">Characters: -</div>
                </div>
            </div>
        </div>
    </div>
</div>`,U=`<button id="toggleGuide" class="toggle-guide">Tutorial & Simulation</button>
<div id="guide" class="guide-content hidden">
    <h4>Quick Guide:</h4>
    <ul>
        <li>Copy and paste your database schema.</li>
        <li>Use "PK" in the Nullable field to indicate Primary Keys. If no "PK" is stated, default
            PK would be field[0].</li>
        <li>You can have multiple primary keys.</li>
        <li>Fill in the Data Input with your values.</li>
        <li>Click buttons below to simulate the query generation.</li>
    </ul>
    <div class="button-group simulate-buttons">
        <button id="simulationFillSchemaButton" class="simulate-button">1. Fill Schema</button>
        <p>&rarr;</p>
        <button id="simulationFillDataButton" class="simulate-button">2. Fill Data</button>
        <p>&rarr;</p>
        <button id="simulationGenerateQueryButton" class="simulate-button">3. Generate
            Query</button>
    </div>
</div>`;class q{constructor(e){this.container=e,this.editor=null,this.schemaTable=null,this.dataTable=null,this.elements={},this.localStorageService=new I,this.schemaValidationService=new k,this.queryGenerationService=new _,this.attachmentProcessorService=new P,this.sqlSplitterService=new V,this.isGuideActive=!1,this.processedFiles=[],this.searchState={selectedIndex:-1,visibleItems:[]},this.init()}async init(){try{await this.loadHtmlTemplates(),this.bindElements(),this.clearError(),await v.load("handsontable"),await v.load("codemirror"),await this.initializeComponents(),this.setupEventListeners(),this.setupTableNameSearch(),this.loadMostRecentSchema()}catch(e){throw console.error("Failed to initialize Quick Query:",e),this.elements.errorMessages?console.log(e.message):(console.error("Error elements not bound yet:",e),this.container.innerHTML=`<div class="error-message">"Failure to load, please contact app's developer."</div>`),e}}async loadHtmlTemplates(){try{if(this.container.innerHTML=z,await new Promise(e=>setTimeout(e,0)),this.isGuideActive){const e=document.getElementById("guideContainer");if(!e)throw new Error("Guide container element not found");e.innerHTML=U,await new Promise(t=>setTimeout(t,0))}}catch(e){throw console.error("Error loading HTML templates:",e),e}}async initializeComponents(){try{this.initializeSpreadsheets(),this.initializeEditor(),this.elements.filesContainer.classList.add("hidden"),this.elements.attachmentsContainer.classList.remove("hidden")}catch(e){console.log(e)}}bindElements(){this.elements={tableNameInput:document.getElementById("tableNameInput"),queryTypeSelect:document.getElementById("queryTypeSelect"),schemaFileInput:document.getElementById("schemaFileInput"),schemaContainer:document.getElementById("spreadsheet-schema"),dataContainer:document.getElementById("spreadsheet-data"),attachmentsContainer:document.getElementById("attachments-container"),attachmentsInput:document.getElementById("attachmentsInput"),filesContainer:document.getElementById("files-container"),errorMessages:document.getElementById("errorMessages"),warningMessages:document.getElementById("warningMessages"),guide:document.getElementById("guide"),schemaOverlay:document.getElementById("schemaOverlay"),savedSchemasList:document.getElementById("savedSchemasList"),toggleGuideButton:document.getElementById("toggleGuide"),guideContent:document.getElementById("guide"),toggleWordWrapButton:document.getElementById("toggleWordWrap"),showSavedSchemasButton:document.getElementById("showSavedSchemas"),closeSchemaOverlayButton:document.getElementById("closeSchemaOverlay"),exportSchemasButton:document.getElementById("exportSchemas"),clearAllSchemasButton:document.getElementById("clearAllSchemas"),importSchemasButton:document.getElementById("importSchemas"),splitSQLButton:document.getElementById("splitSQL"),tableSearchContainer:null,dropdownContainer:null,filePreviewOverlay:document.getElementById("fileViewerOverlay"),closeFilePreviewOverlayButton:document.getElementById("closeFileViewer")}}setupEventListeners(){Object.entries({tableNameInput:{input:t=>this.handleSearchInput(t),keydown:t=>this.handleSearchKeyDown(t)},queryTypeSelect:{change:()=>this.handleGenerateQuery()},schemaFileInput:{change:t=>this.handleSchemaFileInput(t)},generateQuery:{click:()=>this.handleGenerateQuery()},copySQL:{click:t=>T(this.editor.getValue(),t.target)},clearAll:{click:()=>this.handleClearAll()},downloadSQL:{click:()=>this.handleDownloadSql()},toggleWordWrapButton:{click:()=>this.handleToggleWordWrap()},splitSQLButton:{click:()=>this.handleSplitSql()},attachmentsContainer:{click:()=>this.elements.attachmentsInput.click(),dragOver:t=>this.handleDragOver(t),dragLeave:t=>this.handleDragLeave(t),drop:t=>this.handleDrop(t)},attachmentsInput:{change:t=>this.handleAttachmentsInput(t)},toggleGuideButton:{click:()=>this.handleToggleGuide()},simulationFillSchemaButton:{click:()=>this.handleSimulationFillSchema()},simulationFillDataButton:{click:()=>this.handleSimulationFillData()},simulationGenerateQueryButton:{click:()=>this.handleSimulationGenerateQuery()},schemaOverlay:{click:t=>{t.target===this.elements.schemaOverlay&&this.elements.schemaOverlay.classList.add("hidden")}},filePreviewOverlay:{click:t=>{t.target===this.elements.filePreviewOverlay&&this.elements.filePreviewOverlay.classList.add("hidden")}},addFieldNames:{click:()=>this.handleAddFieldNames()},addDataRow:{click:()=>this.handleAddDataRow()},removeDataRow:{click:()=>this.handleRemoveDataRow()},clearData:{click:()=>this.handleClearData()},addNewSchemaRow:{click:()=>this.handleAddNewSchemaRow()},removeLastSchemaRow:{click:()=>this.handleRemoveLastSchemaRow()},showSavedSchemasButton:{click:()=>{this.elements.schemaOverlay.classList.remove("hidden"),this.updateSavedSchemasList()}},closeSchemaOverlayButton:{click:()=>this.elements.schemaOverlay.classList.add("hidden")},exportSchemasButton:{click:()=>this.handleExportSchemas()},clearAllSchemasButton:{click:()=>this.handleClearAllSchemas()},importSchemasButton:{click:()=>this.elements.schemaFileInput.click()}}).forEach(([t,a])=>{const s=this.elements[t]||document.getElementById(t);s?Object.entries(a).forEach(([n,r])=>{s.addEventListener(n,r)}):console.warn(`Element '${t}' not found`)})}initializeEditor(){this.editor=CodeMirror(document.getElementById("queryEditor"),{mode:"text/x-sql",theme:"material",lineNumbers:!0,readOnly:!1,viewportMargin:1/0,lineWrapping:!1}),setTimeout(()=>this.editor.refresh(),0)}initializeSpreadsheets(){const e={...F,afterChange:a=>{a&&(this.updateDataSpreadsheet(),this.handleAddFieldNames())},afterGetColHeader:function(a,s){const n=s.querySelector(".colHeader");n&&(n.style.fontWeight="bold")}};this.schemaTable=new Handsontable(this.elements.schemaContainer,e);const t={...$,afterChange:(a,s)=>{if(!a||s==="loadData")return;const n=this.elements.tableNameInput.value.trim();if(n&&a.length>0){const r=this.dataTable.getData();this.localStorageService.updateTableData(n,r)}}};this.dataTable=new Handsontable(this.elements.dataContainer,t)}updateDataSpreadsheet(){const t=this.schemaTable.getData().filter(n=>n[0]).length,a=this.dataTable.getData(),s=Array.from({length:t},(n,r)=>String.fromCharCode(65+r));if(this.dataTable.updateSettings({colHeaders:s,columns:Array(t).fill({type:"text"}),minCols:t}),a.length<2){const n=[Array(t).fill(null),Array(t).fill(null)];this.dataTable.loadData(n)}else{const n=a.map(r=>r.slice(0,t).concat(Array(Math.max(0,t-r.length)).fill(null)));this.dataTable.loadData(n)}}showError(e){this.elements.errorMessages&&(this.elements.errorMessages.innerHTML=e,this.elements.errorMessages.style.display="block")}showSuccess(e){this.elements.warningMessages&&(this.elements.errorMessages.innerHTML=e,this.elements.errorMessages.style.display="block",this.elements.errorMessages.style.color="green")}clearError(){this.elements.errorMessages&&this.elements.warningMessages&&(this.elements.errorMessages.textContent="",this.elements.warningMessages.textContent="",this.elements.errorMessages.style.display="none",this.elements.warningMessages.style.display="none")}handleGenerateQuery(){try{const e=this.elements.tableNameInput.value.trim(),t=this.elements.queryTypeSelect.value,a=this.schemaTable.getData().filter(r=>r[0]),s=this.dataTable.getData();if(!e)throw new Error("Please fill in schema_name.table_name.");if(!e.includes("."))throw new Error("Table name format should be 'schema_name.table_name'.");if(H(a))throw this.adjustDbeaverSchema(a),new Error("Schema data adjusted from DBeaver to SQL Developer format. Please refill the data sheet.");this.schemaValidationService.validateSchema(a),this.schemaValidationService.matchSchemaWithData(a,s),this.localStorageService.saveSchema(e,a,s);const n=this.queryGenerationService.generateQuery(e,t,a,s,this.processedFiles);this.editor.setValue(n),this.clearError()}catch(e){this.showError(e.message),this.editor.setValue("")}}handleClearAll(){this.elements.tableNameInput.value="",this.schemaTable&&this.schemaTable.updateSettings({data:[["","","",""]],colHeaders:["Field Name","Data Type","Nullable/PK","Default","Field Order","Comments"]}),this.dataTable&&this.dataTable.updateSettings({data:[[],[]],colHeaders:!0,minCols:1}),this.editor&&this.editor.setValue(""),this.clearError(),this.elements.queryTypeSelect.value="merge"}handleDownloadSql(){const e=this.editor.getValue();if(!e){this.showError("No SQL to download. Please generate a query first.");return}const s=`${this.elements.tableNameInput.value.trim().replace(/[^a-z0-9_.]/gi,"_").toUpperCase()}.sql`,n=new Blob([e],{type:"text/plain"}),r=URL.createObjectURL(n),i=document.createElement("a");i.href=r,i.download=s,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(r)}handleSplitSql(){const e=this.editor.getValue(),t=this.elements.tableNameInput.value.trim();if(!e){this.showError("No SQL to split. Please generate a query first.");return}if(!t){this.showError("Please fill in schema_name.table_name.");return}if(!t.includes(".")){this.showError("Table name format should be 'schema_name.table_name'.");return}const a=this.elements.splitSQLButton,s=a.textContent,n=a.style.backgroundColor;try{a.textContent="Processing...",a.style.backgroundColor="red",a.disabled=!0;const{chunks:r,oversizedChunksCount:i}=this.sqlSplitterService.splitSql(e,t);if(r.length===0)throw new Error("No valid SQL statements found after splitting.");const c=new JSZip,o=t.replace(/[^a-z0-9_.]/gi,"_").toUpperCase();r.forEach((d,l)=>{const h=`${String(l+1).padStart(2,"0")}_${o}.sql`;c.file(h,d)}),a.textContent="Downloading...",c.generateAsync({type:"blob"}).then(d=>{const l=URL.createObjectURL(d),m=document.createElement("a");m.href=l,m.download=`${o}_split.zip`,document.body.appendChild(m),m.click(),document.body.removeChild(m),URL.revokeObjectURL(l),this.showSuccess(`SQL query split into ${r.length} chunks. ${i} chunk(s) exceed ${Math.floor(this.sqlSplitterService.maxChunkSize/1024)} KB.`)})}catch(r){this.showError(`Failed to split SQL: ${r.message}`)}finally{setTimeout(()=>{a.textContent=s,a.style.backgroundColor=n,a.disabled=!1},1e3)}}handleToggleWordWrap(){const e=document.getElementById("toggleWordWrap"),a=!this.editor.getOption("lineWrapping");this.editor.setOption("lineWrapping",a),e.textContent=`Word Wrap: ${a?"On":"Off"}`,this.editor.refresh()}handleToggleGuide(){this.elements.guideContent.classList.contains("hidden")?(this.elements.guideContent.classList.remove("hidden"),this.elements.toggleGuideButton.textContent="Hide"):(this.elements.guideContent.classList.add("hidden"),this.elements.toggleGuideButton.textContent="Tutorial & Simulation")}handleSimulationFillSchema(){this.elements.tableNameInput.value="schema_name.table_name",this.schemaTable.loadData(x)}handleSimulationFillData(){this.dataTable.loadData(R),this.updateDataSpreadsheet()}handleSimulationGenerateQuery(){this.handleGenerateQuery(),this.handleToggleGuide()}handleAddFieldNames(){const t=this.schemaTable.getData().filter(s=>s[0]).map(s=>s[0]),a=this.dataTable.getData();a.length>0?a[0]=t:a.push(t),a.length<2&&a.push(Array(t.length).fill(null)),this.dataTable.loadData(a)}handleAddDataRow(){const e=this.dataTable.getData(),a=this.schemaTable.getData().filter(r=>r[0]).length,s=Array(a).fill(null),n=[...e,s];this.dataTable.loadData(n)}handleRemoveDataRow(){const t=this.dataTable.getData().slice(0,-1);this.dataTable.loadData(t)}handleClearData(){const t=this.schemaTable.getData().filter(s=>s[0]).map(s=>s[0]),a=[t,Array(t.length).fill(null)];this.dataTable.loadData(a)}handleAddNewSchemaRow(){const e=this.schemaTable.getData(),t=Array(6).fill(null),a=[...e,t];this.schemaTable.loadData(a)}handleRemoveLastSchemaRow(){const t=this.schemaTable.getData().slice(0,-1);this.schemaTable.loadData(t)}handleClearAllSchemas(){if(this.localStorageService.getAllTables().length===0){this.showError("No schemas to clear");return}if(!confirm("Are you sure you want to clear all saved schemas? This cannot be undone."))return;this.localStorageService.clearAllSchemas()?(this.showSuccess("All saved schemas have been cleared"),this.elements.schemaOverlay.classList.add("hidden")):this.showError("Failed to clear all saved schemas")}updateSavedSchemasList(){const e=this.localStorageService.getAllTables();if(e.length===0){this.elements.savedSchemasList.innerHTML='<div class="no-schemas">No saved schemas</div>';return}const t=e.reduce((a,s)=>(a[s.schemaName]||(a[s.schemaName]=[]),a[s.schemaName].push(s),a),{});this.elements.savedSchemasList.innerHTML="",Object.entries(t).forEach(([a,s])=>{const n=document.createElement("div");n.className="schema-group";const r=document.createElement("div");r.className="schema-group-header",r.textContent=a,n.appendChild(r),s.forEach(i=>{const c=document.createElement("div");c.className="schema-item";const o=document.createElement("div");o.className="schema-info";const d=document.createElement("div");d.className="schema-name",d.textContent=i.tableName;const l=document.createElement("div");l.className="schema-timestamp",l.textContent=new Date(i.timestamp).toLocaleString(),o.appendChild(d),o.appendChild(l);const m=document.createElement("div");m.className="schema-actions";const h=document.createElement("button");h.textContent="Load",h.addEventListener("click",()=>this.handleLoadSchema(i.fullName));const p=document.createElement("button");p.textContent="Delete",p.addEventListener("click",()=>this.handleDeleteSchema(i.fullName)),m.appendChild(h),m.appendChild(p),c.appendChild(o),c.appendChild(m),n.appendChild(c)}),this.elements.savedSchemasList.appendChild(n)})}handleLoadSchema(e){const t=this.localStorageService.loadSchema(e,!0);t?(this.elements.tableNameInput.value=e,this.schemaTable.loadData(t.schema),this.updateDataSpreadsheet(),t.data?this.dataTable.loadData(t.data):(this.handleAddFieldNames(),this.handleClearData()),this.elements.schemaOverlay.classList.add("hidden"),this.clearError()):this.showError(`Failed to load schema for ${e}`)}handleDeleteSchema(e){confirm(`Delete schema for ${e}?`)&&(this.localStorageService.deleteSchema(e)?(this.updateSavedSchemasList(),this.elements.tableNameInput.value===e&&this.handleClearAll()):this.showError(`Failed to delete schema for ${e}`))}handleExportSchemas(){const e=this.localStorageService.getAllTables();if(e.length===0){this.showError("No schemas to export");return}const t={};e.forEach(r=>{const i=this.localStorageService.loadSchema(r.fullName);i&&(t[r.schemaName]||(t[r.schemaName]={}),t[r.schemaName][r.tableName]=i)});const a=new Blob([JSON.stringify(t,null,2)],{type:"application/json"}),s=URL.createObjectURL(a),n=document.createElement("a");n.href=s,n.download="quick_query_saved_schemas.json",document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(s)}setupTableNameSearch(){const e=this.elements.tableNameInput;e.setAttribute("autocomplete","off"),e.setAttribute("autocorrect","off"),e.setAttribute("autocapitalize","off"),e.setAttribute("spellcheck","false");const t=document.createElement("div");t.className="table-search-container",e.parentNode.insertBefore(t,e),t.appendChild(e);const a=document.createElement("div");a.className="table-search-dropdown",a.style.display="none",t.appendChild(a),this.elements.tableSearchContainer=t,this.elements.dropdownContainer=a,this.setupSearchEventListeners(t,a,e)}setupSearchEventListeners(e,t,a){a.addEventListener("input",s=>this.handleSearchInput(s)),a.addEventListener("keydown",s=>this.handleSearchKeyDown(s)),document.addEventListener("click",s=>{e.contains(s.target)||(t.style.display="none",this.searchState.selectedIndex=-1)})}handleSearchInput(e){const t=e.target.value.trim();if(this.elements.tableNameInput.style.borderColor="",!t){const n=this.localStorageService.searchSavedSchemas("").slice(0,7);this.showSearchDropdown(n);return}const a=t.split(".");if(!this.localStorageService.validateOracleName(a[0],"schema")||!this.localStorageService.validateOracleName(a[1],"table"))return;const s=this.localStorageService.searchSavedSchemas(t);this.showSearchDropdown(s)}handleSearchKeyDown(e){if(this.elements.dropdownContainer.style.display==="none"&&e.key==="ArrowDown"){const t=this.localStorageService.searchSavedSchemas("").slice(0,7);this.showSearchDropdown(t),this.searchState.selectedIndex=-1;return}this.elements.dropdownContainer.style.display==="block"&&this.handleDropdownNavigation(e)}showSearchDropdown(e){const t=this.elements.dropdownContainer;if(t.innerHTML="",this.searchState.visibleItems=[],this.searchState.selectedIndex=-1,e.length===0){t.style.display="none";return}const a=e.reduce((s,n)=>(s[n.schemaName]||(s[n.schemaName]=[]),s[n.schemaName].push(n),s),{});Object.entries(a).forEach(([s,n])=>{const r=document.createElement("div");r.className="schema-group";const i=document.createElement("div");i.className="schema-header",i.textContent=s,r.appendChild(i),n.forEach(c=>{const o=document.createElement("div");o.className="search-result-item",o.textContent=c.tableName,o.dataset.fullName=c.fullName,this.searchState.visibleItems.push(o),o.addEventListener("click",()=>this.selectSearchResult(c.fullName)),r.appendChild(o)}),t.appendChild(r)}),t.style.display="block"}selectSearchResult(e){this.elements.tableNameInput.value=e,this.elements.dropdownContainer.style.display="none",this.handleLoadSchema(e),this.searchState.selectedIndex=-1,this.elements.tableNameInput.focus()}handleDropdownNavigation(e){switch(e.key){case"ArrowDown":e.preventDefault(),this.searchState.selectedIndex=Math.min(this.searchState.selectedIndex+1,this.searchState.visibleItems.length-1),this.updateSearchSelection();break;case"ArrowUp":e.preventDefault(),this.searchState.selectedIndex=Math.max(this.searchState.selectedIndex-1,-1),this.updateSearchSelection();break;case"Enter":e.preventDefault(),this.searchState.selectedIndex>=0&&this.searchState.selectedIndex<this.searchState.visibleItems.length&&this.selectSearchResult(this.searchState.visibleItems[this.searchState.selectedIndex].dataset.fullName);break;case"Escape":this.elements.dropdownContainer.style.display="none",this.searchState.selectedIndex=-1;break}}updateSearchSelection(){this.searchState.visibleItems.forEach((e,t)=>{t===this.searchState.selectedIndex?(e.classList.add("selected"),e.scrollIntoView({block:"nearest"})):e.classList.remove("selected")})}loadMostRecentSchema(){const e=this.localStorageService.getAllTables();if(e.length>0){const t=e[0];this.handleLoadSchema(t.fullName)}}async handleSchemaFileInput(e){const t=e.target.files[0];if(t)try{const a=await t.text(),s=JSON.parse(a);if(!this.isValidSchemaFormat(s))throw new Error("Invalid schema format");let n=0;Object.entries(s).forEach(([r,i])=>{Object.entries(i).forEach(([c,o])=>{const d=`${r}.${c}`;this.localStorageService.saveSchema(d,o)&&n++})}),this.updateSavedSchemasList(),this.showSuccess(`Successfully imported ${n} table schemas`),setTimeout(()=>this.clearError(),3e3)}catch(a){this.showError(`Failed to import schemas: ${a.message}`)}finally{e.target.value=""}}isValidSchemaFormat(e){return!e||typeof e!="object"?!1:Object.entries(e).every(([t,a])=>typeof a!="object"?!1:Object.entries(a).every(([s,n])=>Array.isArray(n)&&n.every(r=>Array.isArray(r)&&r.length>=3&&typeof r[0]=="string"&&typeof r[1]=="string"&&typeof r[2]=="string")))}adjustDbeaverSchema(e){console.log("Adjusting schema data");const a=e.slice(1).map(s=>{const n=String(s[4]).toLowerCase()==="true"?"No":"Yes",r=s[5]==="[NULL]"?"":s[5];return[s[0],s[2],n,r,s[1]||"",s[6]||""]});if(this.schemaTable&&typeof this.schemaTable.loadData=="function")try{this.schemaTable.loadData(a),this.updateDataSpreadsheet()}catch(s){console.error("Error updating schema table:",s)}}async handleAttachmentsInput(e){const t=Array.from(e.target.files);if(t.length>0)try{this.processedFiles=await this.attachmentProcessorService.processAttachments(t),console.log("Processed files:",this.processedFiles),this.elements.filesContainer.innerHTML="",this.elements.attachmentsInput.value="",this.processedFiles.forEach((a,s)=>{const n=document.createElement("button");n.className="file-button",n.innerHTML=`
            <div class="file-info">
              <button class="copy-filename" title="Copy filename">
                <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                  <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
                </svg>
              </button>
              <span class="file-name">${a.name}</span>
            </div>
            <div class="file-actions">
              <span class="file-size">${(a.size/1024).toFixed(2)} KB</span>
              <button class="delete-file" title="Delete file">×</button>
            </div>
          `;const r=n.querySelector(".copy-filename");r.addEventListener("click",c=>{c.stopPropagation(),navigator.clipboard.writeText(a.name),r.classList.add("copied"),setTimeout(()=>r.classList.remove("copied"),1e3)}),n.querySelector(".delete-file").addEventListener("click",c=>{c.stopPropagation();const o=this.processedFiles.findIndex(d=>d.name===a.name);o!==-1&&(this.processedFiles.splice(o,1),n.remove()),this.processedFiles.length===0&&(this.elements.filesContainer.classList.add("hidden"),this.elements.attachmentsContainer.classList.remove("hidden"))}),n.addEventListener("click",()=>this.showFileViewer(a)),this.elements.filesContainer.appendChild(n)}),this.elements.attachmentsContainer.classList.add("hidden"),this.elements.filesContainer.classList.remove("hidden"),this.clearError()}catch(a){this.showError(`Error processing attachments: ${a.message}`)}}showFileViewer(e){var c;const t=document.getElementById("fileViewerOverlay"),a=document.getElementById("fileViewerTitle"),s=document.getElementById("originalContent"),n=document.getElementById("processedContent");document.getElementById("fileMetadata");const r=document.querySelector('.tab-button[data-tab="processed"]');console.log("File viewer showing for file:",e),a.textContent=e.name,s.innerHTML="",n.innerHTML="";const i={fileType:document.getElementById("fileType"),fileSize:document.getElementById("fileSize"),base64Size:document.getElementById("base64Size"),dimensions:document.getElementById("dimensions"),lineCount:document.getElementById("lineCount"),charCount:document.getElementById("charCount")};if(Object.values(i).forEach(o=>o.textContent=""),Object.values(i).forEach(o=>o.classList.add("hidden")),i.fileType.textContent=`File Type: ${e.type}`,i.fileType.classList.remove("hidden"),e.type.startsWith("image/")||e.type==="application/pdf"){const o=document.createElement("div");if(o.className=e.type.startsWith("image/")?"image-viewer":"pdf-viewer",e.type.startsWith("image/")){const l=document.createElement("img");l.src=e.processedFormats.base64,o.appendChild(l),l.onload=()=>{i.fileSize.textContent=`Media Size: ${(e.size/1024).toFixed(2)} KB`,i.base64Size.textContent=`Base64 Size: ${(e.processedFormats.base64.length/1024).toFixed(2)} KB`,i.dimensions.textContent=`Dimensions: ${l.naturalWidth} × ${l.naturalHeight}`,[i.fileSize,i.base64Size,i.dimensions].forEach(m=>m.classList.remove("hidden"))}}else{const l=document.createElement("object");l.data=e.processedFormats.base64,l.type="application/pdf",l.width="100%",l.height="600px",o.appendChild(l),i.fileSize.textContent=`Size: ${(e.size/1024).toFixed(2)} KB`,i.base64Size.textContent=`Base64 Size: ${(e.processedFormats.base64.length/1024).toFixed(2)} KB`,[i.fileSize,i.base64Size].forEach(m=>m.classList.remove("hidden"))}s.appendChild(o);const d=document.createElement("pre");d.className="base64-content",d.textContent=e.processedFormats.base64,n.appendChild(d),r.style.display="block"}else if((c=e.processedFormats.contentType)!=null&&c.includes("base64")){const o=document.createElement("pre");o.className="base64-content",o.textContent=e.processedFormats.original,s.appendChild(o);const d=document.createElement("div");if(d.className="rendered-content",e.processedFormats.base64.startsWith("data:image/")){const l=document.createElement("img");l.src=e.processedFormats.base64,d.appendChild(l)}else if(e.processedFormats.base64.startsWith("data:application/pdf")){const l=document.createElement("object");l.data=e.processedFormats.base64,l.type="application/pdf",d.appendChild(l)}n.appendChild(d),r.style.display="block",i.fileSize.textContent=`Original Media Size: ${(e.processedFormats.sizes.original/1024).toFixed(2)} KB`,e.processedFormats.base64&&(i.base64Size.textContent=`Base64 Size: ${(e.processedFormats.base64.length/1024).toFixed(2)} KB`,i.base64Size.classList.remove("hidden")),i.fileSize.classList.remove("hidden")}else{const o=document.createElement("pre");o.className="text-content",o.textContent=e.processedFormats.original,s.appendChild(o);const d=e.processedFormats.original.length,l=(e.processedFormats.original.match(/\n/g)||[]).length+1;i.fileSize.textContent=`Size: ${(d/1024).toFixed(2)} KB`,i.lineCount.textContent=`Lines: ${l}`,i.charCount.textContent=`Characters: ${d}`,[i.fileSize,i.lineCount,i.charCount].forEach(m=>m.classList.remove("hidden")),r.style.display="none"}t.classList.remove("hidden"),document.querySelector('.tab-button[data-tab="original"]').classList.add("active"),document.getElementById("originalContent").classList.add("active"),document.querySelectorAll(".tab-button").forEach(o=>{o.onclick=()=>{document.querySelectorAll(".tab-button").forEach(d=>d.classList.remove("active")),o.classList.add("active"),document.querySelectorAll(".tab-content").forEach(d=>d.classList.remove("active")),document.getElementById(`${o.dataset.tab}Content`).classList.add("active")}}),document.getElementById("closeFileViewer").onclick=()=>{t.classList.add("hidden")}}showFilePreview(){this.elements.filePreviewOverlay.classList.remove("hidden")}closeFilePreview(){this.elements.filePreviewOverlay.classList.add("hidden")}handleDragOver(e){e.preventDefault(),e.stopPropagation(),this.attachmentsContainer.classList.add("drag-over")}handleDragLeave(e){e.preventDefault(),e.stopPropagation(),this.attachmentsContainer.classList.remove("drag-over")}handleDrop(e){e.preventDefault(),e.stopPropagation(),this.attachmentsContainer.classList.remove("drag-over")}}function Q(u){return new q(u)}export{Q as initQuickQuery};
//# sourceMappingURL=main-9_eRAUFY.js.map
